parameters:
  azureSubscription: ''
  name: ''
  secretName: ''
  vaultName: ''

steps:
- task: AzurePowerShell@5
  displayName: 'Check expiration'
  name: ${{ parameters.name }}
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    ScriptType: InlineScript
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'
    Inline: |
      $SECRETVAULTNAME = "${{ parameters.vaultName }}"
      $SECRET_NAME = "${{ parameters.secretName }}"
      Write-Host "Key vault: $SECRETVAULTNAME"

      $secret = Get-AzKeyVaultSecret -VaultName $SECRETVAULTNAME -Name $SECRET_NAME

      $generateNew = $false

      if ($null -ne $secret.Tags -and $secret.Tags["auto-generated"] -eq "true") {
          Write-Host "Located autogenerated secret"

          ## Check expires flag
          $delta = $secret.Expires - (Get-Date)

          Write-Host "Secret expires in $($delta.Days) days"
          if ($delta.Days -lt 60) {
              $generateNew = $true
          }

      } else {
          Write-Host "Secret not autogenerated, creating new..."
          $generateNew = $true
      }
    
      if (-not $generateNew) {
          Write-Host "No need to generate secret..."
          Write-Host "##vso[task.setvariable variable=generateNew;isOutput=true]false"
          Write-Host "Set variable [${{ parameters.name }}.generateNew] -> false"
      } else {
          Write-Host "Generating new secret..."
          Write-Host "##vso[task.setvariable variable=generateNew;isOutput=true]true"
          Write-Host "Set variable [${{ parameters.name }}.generateNew] -> true"
      }


    