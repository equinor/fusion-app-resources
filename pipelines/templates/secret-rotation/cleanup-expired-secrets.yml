parameters:
  - name: azureSubscription
    type: string
  - name: clientId
    type: string
    displayName: 'AAD Application to create secret on'
  - name: keyIds

steps:
- task: AzurePowerShell@5
  displayName: 'Prune secrets'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    ScriptType: InlineScript
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'
    Inline: |
      $AAD_APP_ID = "${{ parameters.clientId }}"
      $KEY_IDS = "${{ parameters.keyIds }}"

      Write-Host "Application Client Id: $AAD_APP_ID"
      Write-Host "Key Ids marked for deletion: $KEY_IDS"

      if ([string]::IsNullOrEmpty($KEY_IDS)) {
        Write-Host "No keys to delete, skipping..."
        return
      }

      $keys = $KEY_IDS.Split(";")
      foreach ($keyId in $keys) {
        if ([string]::IsNullOrEmpty($keyId)) {
          Write-Host "Key is empty, skipping..."
          continue
        }

        Write-Host "Deleting key [$keyId] from app registration $AAD_APP_ID"

        try {
            Remove-AzADAppCredential -ApplicationId $AAD_APP_ID -KeyId $keyId -ErrorAction Stop
        }
        catch {
            Write-Host "Unable to remove credential with key id: '$keyId' from application '$AAD_APP_ID'. The key has probably already been removed."
        }
      }

    