parameters:
  azureSubscription: ''  
  secretName: ''
  vaultName: ''
  secret: ''
  condition: ''

steps:
- task: AzurePowerShell@5
  displayName: 'Persist secret to keyvault'
  condition: succeeded()
  inputs:
    condition: ${{ parameters.condition }}
    azureSubscription: ${{ parameters.azureSubscription }}
    ScriptType: InlineScript
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'
    Inline: |
      $SECRETVAULTNAME = "${{ parameters.vaultName }}"
      $SECRET_NAME = "${{ parameters.secretName }}"
      Write-Host "Key vault: $SECRETVAULTNAME"
      Write-Host "Secret name: $SECRET_NAME"

      if ([string]::IsNullOrEmpty("${{ parameters.secret }}")) {
        throw "Secret provided is empty..."
      }

      $secretValue = ConvertTo-SecureString -String ${{ parameters.secret }} -AsPlainText -Force

      Set-AzKeyVaultSecret -VaultName $SECRETVAULTNAME -Name $SECRET_NAME -SecretValue $secretValue -Expires $endDate -Tag @{ "auto-generated" = "true"; "keyId" = $newSecret.KeyId; "hint" = $newSecret.Hint }

      Write-Host "Key vault updated..."



    