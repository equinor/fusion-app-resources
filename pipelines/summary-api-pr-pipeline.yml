name: $(date:yyyyMMdd)$(rev:.r)

pr: 
  paths:
    include:
    - src/Fusion.Summary.Api/*

trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: infra
      name: equinor/fusion-infrastructure
      type: github
      endpoint: fusion-infrastructure

variables:
    prNumber: $(System.PullRequest.PullRequestNumber)
    fusionAcr: 'fusioncr.azurecr.io'
    imageRepo: resources/fusion-summary-api
    imageName: $(imageRepo):$(prNumber)
    subscriptionService: 'PROJECT_PORTAL (63b791ae-b2bc-41a1-ac66-806c4e69bffe)'
    deploymentManifest: '$(Pipeline.Workspace)/k8s-deployment/deployment-pr-env.yml'
    fullImageName: $(fusionAcr)/$(imageName)
    buildNr: $(Build.BuildNumber)
  
stages:
  - stage: BuildDockerImage
    displayName: 'Build docker image'
    jobs:
    - job: BuildImage
      steps:

      - task: Docker@2
        displayName: Login to fusioncr
        inputs:
          command: login
          containerRegistry: fusioncr

      - task: Docker@2
        displayName: Login to fusioncachecr
        inputs:
          command: login
          containerRegistry: fusioncachecr
      - template: templates/docker-buildx.yml@infra
        parameters:
          repository: $(imageRepo)
          buildContext: ./src
          dockerfile: src/Fusion.Summary.Api/Dockerfile
          dockerPush: true
          cacheFrom: |
            latest
          cacheTo: |
            $(prNumber)
          tags: |
            $(prNumber)

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          SourceFolder: 'src/Fusion.Summary.Api/Deployment/k8s'
          Contents: |
            deployment-pr-env.yml
          TargetFolder: '$(Build.ArtifactStagingDirectory)'        
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: 'k8s-deployment'
  
  - stage: DeployPR
    displayName: 'Deploy API to PR'
    dependsOn: BuildDockerImage
    condition: succeeded()
    variables: 
      envName: 'pr'
      fusionEnvironment: 'ci'
      clientId: '5a842df8-3238-415d-b168-9f16a6a6031b'
  
    jobs:
    - deployment: DeployPR
      displayName: 'Deploy API to PR'
      environment: fusion-summary-pr.fusion-summary-app-pr
      strategy:
        runOnce:
          deploy:
            steps:
            - template: templates/install-fusion-ps.yml

            - task: AzurePowerShell@4
              displayName: 'Get secrets'
              inputs:
                azureSubscription: $(subscriptionService)
                ScriptType: 'InlineScript'
                FailOnStandardError: true
                azurePowerShellVersion: 'LatestVersion'
                Inline: |
                    $secretText = Get-AzKeyVaultSecret -VaultName kv-fap-resources-pr -Name AzureAd--ClientSecret -AsPlainText
                    Write-Output "##vso[task.setvariable variable=clientSecret;issecret=true]$($secretText)"

            - template: templates/get-appinsights-key.yml
              parameters:
                environment: $(envName)

            # Load the key vault url into variable, so it can be used when replacing tokens.
            - template: templates/get-keyvault-url.yml
              parameters:
                environment: $(envName)
                variableName: envKeyVaultUrl

            - template: templates/replace-tokens.yml
              parameters:
                targetFiles: '$(deploymentManifest)'
  
            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                manifests: $(deploymentManifest) 