name: $(date:yyyyMMdd)$(rev:.r)

trigger: none

pr: 
  branches:
    include:
    - master
  paths:
    include:
    - src/backend/function/*
    - src/backend/integration/*
  
variables:
    subscriptionService: 'PROJECT_PORTAL (63b791ae-b2bc-41a1-ac66-806c4e69bffe)'
    webPackage: '$(Pipeline.Workspace)/drop/Fusion.Resources.Functions.zip'
    prNumber: $(System.PullRequest.PullRequestNumber)
  
stages:
    - template: templates/build-function.yml
      parameters:
        project: 'Fusion.Resources.Functions'


    - stage: DeployPR
      displayName: PR
      dependsOn: BuildFunction
      condition: succeeded()
      
      variables:
        environment: 'pr'
        functionServiceName: func-fap-resources-$(environment)
    
      jobs:
      - deployment: Deploy
        pool: Private Docker
    
        displayName: 'Deploy function app'
        environment: fusion-pr
    
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/deploy-function-template.yml
                  parameters:
                    appName: $(functionServiceName)
                    envName: $(environment)
                    prNumber: $(prNumber)
                    clientId: '5a842df8-3238-415d-b168-9f16a6a6031b'

                - task: AzureFunctionApp@1
                  inputs:
                    azureSubscription: $(subscriptionService)
                    appType: 'functionApp'
                    appName: $(functionServiceName)
                    package: $(webPackage)
                    deploymentMethod: 'runFromPackage'

                - task: AzurePowerShell@5
                  displayName: 'Tag PR'
                  inputs: 
                    azureSubscription: $(subscriptionService)
                    ScriptType: 'InlineScript'
                    FailOnStandardError: true
                    azurePowerShellVersion: 'LatestVersion'
                    Inline: |
                      $functionAppName = "$functionServiceName"
                      $envResourceGroup = Get-AzResourceGroup -Tag @{ "fusion-app-component" = "resources-rg-$(environment)" }

                      if ($envResourceGroup -eq $null) { throw "Cannot locate resource group for environment '$(environment)'" }

                      $resourceGroup = $envResourceGroup.ResourceGroupName
                      Write-Host "Using resource group $resourceGroup"

                      $functionApp = Get-AzWebApp -ResourceGroupName $resourceGroup -Name $(functionServiceName)
                      if ($functionApp -eq $null) { throw "Cannot locate ' $(functionServiceName)' for environment '$(environment)'" }
                      if ($(prNumber) -eq $null) { throw "Cannot locate prNumber for environment '$(environment)'" }

                      $functionAppName = $functionApp.Name
                      Write-Host "Updating function $functionAppName PR tag to $(prNumber)"

                      $mergedTags = @{"pr"="$(prNumber)";}
                      Update-AzTag -ResourceId $functionApp.Id -Tag $mergedTags -Operation Merge
