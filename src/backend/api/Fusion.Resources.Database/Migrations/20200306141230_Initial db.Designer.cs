// <auto-generated />
using System;
using Fusion.Resources.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fusion.Resources.Database.Migrations
{
    [DbContext(typeof(ResourcesDbContext))]
    [Migration("20200306141230_Initial db")]
    partial class Initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Allocated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("AllocatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AllocatedById");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractPersonnel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ContractPersonnel");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractorRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ContractorRequests");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AzureUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("ExternalPersonnel");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AzureUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonnelDiscipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DbExternalPersonnelPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonnelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DbExternalPersonnelPersonId");

                    b.ToTable("DbPersonnelDiscipline");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DomainId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContract", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "AllocatedBy")
                        .WithMany()
                        .HasForeignKey("AllocatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractPersonnel", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractorRequest", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbContractPersonnel", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+ProvisionStatus", "ProvisioningStatus", b1 =>
                        {
                            b1.Property<Guid>("DbContractorRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ErrorMessage")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ErrorPayload")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid?>("PositionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset?>("Provisioned")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DbContractorRequestId");

                            b1.ToTable("ContractorRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbContractorRequestId");
                        });

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+RequestPosition", "Position", b1 =>
                        {
                            b1.Property<Guid>("DbContractorRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("AppliesFrom")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("AppliesTo")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("BasePositionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Obs")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Workload")
                                .HasColumnType("float");

                            b1.HasKey("DbContractorRequestId");

                            b1.ToTable("ContractorRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbContractorRequestId");

                            b1.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+PositionTaskOwner", "TaskOwner", b2 =>
                                {
                                    b2.Property<Guid>("RequestPositionDbContractorRequestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid?>("PositionId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid?>("RequestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("RequestPositionDbContractorRequestId");

                                    b2.ToTable("ContractorRequests");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestPositionDbContractorRequestId");
                                });
                        });
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonnelDiscipline", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("DbExternalPersonnelPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
