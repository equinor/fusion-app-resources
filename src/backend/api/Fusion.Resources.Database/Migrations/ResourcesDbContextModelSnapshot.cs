// <auto-generated />
using System;
using Fusion.Resources.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fusion.Resources.Database.Migrations
{
    [DbContext(typeof(ResourcesDbContext))]
    partial class ResourcesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Allocated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("AllocatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AllocatedById");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractPersonnel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ContractPersonnel");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractorRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<Guid?>("OriginalPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastActivity")
                        .IsClustered(false);

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ContractorRequests");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbDelegatedRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecertifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("RecertifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ValidTo")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RecertifiedById");

                    b.ToTable("DelegatedRoles");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbDepartment", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SectorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = "TPD PRD FE EA",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA1",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA2",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA3",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA3 CON",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA4",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA4 CON",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EA EA5",
                            SectorId = "TPD PRD FE EA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM EM1",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM EM2",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM EM3",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM EM4",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE EM EM5",
                            SectorId = "TPD PRD FE EM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MAT1",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MAT2",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MEC1",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MEC2",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MEC3",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS MEC4",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS STR1",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MMS STR2",
                            SectorId = "TPD PRD FE MMS"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO GEO",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO GMS",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO MAP",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO MAR1",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE MO MAR2",
                            SectorId = "TPD PRD FE MO"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE FA",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE PR1",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE PR2",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE SUS",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE TDS",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE TS",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SE TWE",
                            SectorId = "TPD PRD FE SE"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP1",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP2",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP3",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP4",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP5",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD FE SP SP6",
                            SectorId = "TPD PRD FE SP"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CHU1",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CHU2",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CHU3",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CM1",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CM2",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CM3",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC CCH CM4",
                            SectorId = "TPD PRD PMC CCH"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA1",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA2",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA3",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA4",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA5",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA6",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PCA PCA7",
                            SectorId = "TPD PRD PMC PCA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PM",
                            SectorId = "TPD PRD PMC PM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PM PM1",
                            SectorId = "TPD PRD PMC PM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PM PM2",
                            SectorId = "TPD PRD PMC PM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PM PM3",
                            SectorId = "TPD PRD PMC PM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC PM PM4",
                            SectorId = "TPD PRD PMC PM"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA ADM1",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA ADM2",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA ADM3",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA DM2",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA IDM1",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA QRM1",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA QRM2",
                            SectorId = "TPD PRD PMC QA"
                        },
                        new
                        {
                            DepartmentId = "TPD PRD PMC QA RES",
                            SectorId = "TPD PRD PMC QA"
                        });
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbDepartmentResponsible", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTimeOffset>("DateFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ResponsibleAzureObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DepartmentResponsibles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20621fbc-dc4e-4958-95c9-2ac56e166973"),
                            DateCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateFrom = new DateTimeOffset(new DateTime(2020, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            DateTo = new DateTimeOffset(new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            DepartmentId = "TPD PRD PMC PCA PCA7",
                            ResponsibleAzureObjectId = new Guid("20621fbc-dc4e-4958-95c9-2ac56e166973")
                        });
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AzureUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DawinciCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsClustered(false);

                    b.ToTable("ExternalPersonnel");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AzureUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AzureUniqueId")
                        .IsUnique();

                    b.HasIndex("Mail")
                        .IsClustered(false);

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonAbsence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AbsencePercentage")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("AppliesFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("AppliesTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAbsences");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonnelDiscipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DbExternalPersonnelPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonnelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DbExternalPersonnelPersonId");

                    b.ToTable("DbPersonnelDiscipline");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DomainId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbRequestComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RequestId")
                        .IsClustered(false);

                    b.HasIndex("UpdatedById");

                    b.ToTable("RequestComments");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbResourceAllocationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastActivity")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("OrgPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProposedChanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ResourceAllocationRequests");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbResponsibilityMatrix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasePositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResponsibleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ResponsibilityMatrices");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbWorkflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LogicAppName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogicAppVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TerminatedbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkflowClassType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TerminatedbyId");

                    b.HasIndex("RequestId", "RequestType");

                    b.ToTable("Workflows");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbWorkflowStep", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("CompletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Started")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "WorkflowId");

                    b.HasIndex("CompletedById");

                    b.HasIndex("WorkflowId");

                    b.ToTable("DbWorkflowStep");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContract", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "AllocatedBy")
                        .WithMany()
                        .HasForeignKey("AllocatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllocatedBy");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractPersonnel", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Contract");

                    b.Navigation("CreatedBy");

                    b.Navigation("Person");

                    b.Navigation("Project");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbContractorRequest", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbContractPersonnel", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+ProvisionStatus", "ProvisioningStatus", b1 =>
                        {
                            b1.Property<Guid>("DbContractorRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ErrorMessage")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ErrorPayload")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid?>("PositionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset?>("Provisioned")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DbContractorRequestId");

                            b1.ToTable("ContractorRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbContractorRequestId");
                        });

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+RequestPosition", "Position", b1 =>
                        {
                            b1.Property<Guid>("DbContractorRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("AppliesFrom")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("AppliesTo")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("BasePositionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Obs")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Workload")
                                .HasColumnType("float");

                            b1.HasKey("DbContractorRequestId");

                            b1.ToTable("ContractorRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbContractorRequestId");

                            b1.OwnsOne("Fusion.Resources.Database.Entities.DbContractorRequest+PositionTaskOwner", "TaskOwner", b2 =>
                                {
                                    b2.Property<Guid>("RequestPositionDbContractorRequestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid?>("PositionId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid?>("RequestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("RequestPositionDbContractorRequestId");

                                    b2.ToTable("ContractorRequests");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestPositionDbContractorRequestId");
                                });

                            b1.Navigation("TaskOwner");
                        });

                    b.Navigation("Contract");

                    b.Navigation("CreatedBy");

                    b.Navigation("Person");

                    b.Navigation("Position")
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("ProvisioningStatus")
                        .IsRequired();

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbDelegatedRole", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "RecertifiedBy")
                        .WithMany()
                        .HasForeignKey("RecertifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Contract");

                    b.Navigation("CreatedBy");

                    b.Navigation("Person");

                    b.Navigation("Project");

                    b.Navigation("RecertifiedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonAbsence", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbPersonnelDiscipline", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("DbExternalPersonnelPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbRequestComment", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbResourceAllocationRequest", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbResourceAllocationRequest+DbOpPositionInstance", "OrgPositionInstance", b1 =>
                        {
                            b1.Property<Guid>("DbResourceAllocationRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("AppliesFrom")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("AppliesTo")
                                .HasColumnType("datetime2");

                            b1.Property<string>("AssignedToMail")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid?>("AssignedToUniqueId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("LocationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Obs")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("Workload")
                                .HasColumnType("float");

                            b1.HasKey("DbResourceAllocationRequestId");

                            b1.ToTable("ResourceAllocationRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbResourceAllocationRequestId");
                        });

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbResourceAllocationRequest+DbOpProposedPerson", "ProposedPerson", b1 =>
                        {
                            b1.Property<Guid>("DbResourceAllocationRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("AzureUniqueId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("HasBeenProposed")
                                .HasColumnType("bit");

                            b1.Property<string>("Mail")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset?>("ProposedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<bool>("WasNotified")
                                .HasColumnType("bit");

                            b1.HasKey("DbResourceAllocationRequestId");

                            b1.ToTable("ResourceAllocationRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbResourceAllocationRequestId");
                        });

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbResourceAllocationRequest+DbOpProvisionStatus", "ProvisioningStatus", b1 =>
                        {
                            b1.Property<Guid>("DbResourceAllocationRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ErrorMessage")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ErrorPayload")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid?>("OrgInstanceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("OrgPositionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("OrgProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset?>("Provisioned")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DbResourceAllocationRequestId");

                            b1.ToTable("ResourceAllocationRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbResourceAllocationRequestId");
                        });

                    b.OwnsOne("Fusion.Resources.Database.Entities.DbResourceAllocationRequest+DbOpState", "State", b1 =>
                        {
                            b1.Property<Guid>("DbResourceAllocationRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsCompleted")
                                .HasColumnType("bit");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DbResourceAllocationRequestId");

                            b1.ToTable("ResourceAllocationRequests");

                            b1.WithOwner()
                                .HasForeignKey("DbResourceAllocationRequestId");
                        });

                    b.Navigation("CreatedBy");

                    b.Navigation("OrgPositionInstance")
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("ProposedPerson")
                        .IsRequired();

                    b.Navigation("ProvisioningStatus")
                        .IsRequired();

                    b.Navigation("State")
                        .IsRequired();

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbResponsibilityMatrix", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fusion.Resources.Database.Entities.DbProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("Project");

                    b.Navigation("Responsible");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbWorkflow", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "TerminatedBy")
                        .WithMany()
                        .HasForeignKey("TerminatedbyId");

                    b.Navigation("TerminatedBy");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbWorkflowStep", b =>
                {
                    b.HasOne("Fusion.Resources.Database.Entities.DbPerson", "CompletedBy")
                        .WithMany()
                        .HasForeignKey("CompletedById");

                    b.HasOne("Fusion.Resources.Database.Entities.DbWorkflow", "Workflow")
                        .WithMany("WorkflowSteps")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletedBy");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbExternalPersonnelPerson", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbProject", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Fusion.Resources.Database.Entities.DbWorkflow", b =>
                {
                    b.Navigation("WorkflowSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
