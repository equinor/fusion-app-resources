#PS! 
#secret pr.fusion-dev.net-tls must exist for this deployment to work. Since it contains secret information, it cannot be added to source control.

apiVersion: v1
kind: Secret
metadata:
  name: env-secrets
  labels: 
    environment: pr
type: Opaque
stringData:
  appsettings.secrets.yaml: |
    {
      "AzureAd": {
        "ClientSecret": "{{clientSecret}}"
      }
    }
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'resources-api-pr-{{prNumber}}'
  labels: 
    environment: pr
    prNumber: '{{prNumber}}'
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: 'resources-api-pr-{{prNumber}}'
  template:
    metadata:
      labels:
        app: 'resources-api-pr-{{prNumber}}'
    spec:
      volumes:
      - name: env-secrets-volumes
        secret: 
          secretName: env-secrets

      containers:
      - name: resources-api-pr-{{prNumber}}
        image: {{fusionAcr}}/{{imageName}}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: env-secrets-volumes
          mountPath: "/app/secrets" 
        env:
        - name: APPINSIGHTS_INSTRUMENTATIONKEY
          value: "{{instrumentationKey}}"
        - name: KEYVAULT_URL
          value: "{{envKeyVaultUrl}}"
        - name: ENVNAME
          value: "{{ENVNAME}}"
        - name: FUSION_ENVIRONMENT
          value: "{{fusionEnvironment}}"
        - name: AzureAd__ClientId
          value: "{{clientId}}"
        - name: ConnectionStrings__ResourcesDbContext
          value: "{{dbConnectionString}}"
        - name: BuildNr
          value: "{{buildNr}}"        
        args:
        - /server

        livenessProbe:
          httpGet:
            path: /_health/liveness
            port: 80
          failureThreshold: 10
          timeoutSeconds: 30
          initialDelaySeconds: 60
          periodSeconds: 30

        readinessProbe:
          httpGet:
            path: /_health/ready
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: resources-api-pr-{{prNumber}}
  labels: 
    environment: pr
    prNumber: '{{prNumber}}'

spec:
  selector:
    app: resources-api-pr-{{prNumber}}
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resources-api-fusion-ingress-{{prNumber}}
  labels: 
    environment: pr
    prNumber: '{{prNumber}}'
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.org/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    fusion-health/environment: 'pr'
    fusion-health/application: 'Fusion Resources'
    fusion-health/url: /_health/ready
spec:
  tls:
  - hosts:
    - resources-api-pr-{{prNumber}}.fusion-dev.net
    secretName: pr.fusion-dev.net-tls

  rules:
    - host: resources-api-pr-{{prNumber}}.fusion-dev.net
      http:
        paths:
        - path: /
          pathType: Prefix        
          backend:
            service:
              name: resources-api-pr-{{prNumber}}
              port:
                number: 80
