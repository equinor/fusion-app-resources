apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resources-api-fusion-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-fusiondev-issuer
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.org/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - resources.api.fusion-dev.net
    secretName: resources.api.fusion-dev.net-tls
  rules:
    - host: resources.api.fusion-dev.net
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: resources-api
              port:
                number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resources-api-fusion-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-equinor-issuer
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.org/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - resources.api.equinor.com
    secretName: wildcard-tls-cert
  rules:
    - host: resources.api.equinor.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: resources-api
              port:
                number: 80                