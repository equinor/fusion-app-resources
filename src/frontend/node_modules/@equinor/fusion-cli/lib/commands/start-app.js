"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
// import * as inquirer from 'inquirer';
const start_1 = require("../start-app/scripts/start");
// interface IStartAppOptions {
//     apps?: string[];
//     progress?: boolean;
//     production?: boolean;
// }
class StartApp extends command_1.Command {
    async run() {
        // tslint:disable-next-line:no-console
        console.log('Starting apps...');
        // @ts-ignore
        process.env.DEVELOPMENT = true;
        const { port } = this.parse(StartApp).flags;
        start_1.default({ port });
    }
}
exports.default = StartApp;
StartApp.description = 'Start a fusion app';
StartApp.flags = {
    apps: command_1.flags.string({
        char: 'a',
        description: 'Compile one or more fusion apps. E.g. --apps AppKey1 AppKey2 AppKey3',
        multiple: true,
    }),
    help: command_1.flags.help({ char: 'h' }),
    production: command_1.flags.boolean({ char: 'P', description: 'Use production config' }),
    port: command_1.flags.integer({ char: 'p', description: 'Devserver port' }),
};
// const promptForMissingOptions = async (options: IStartAppOptions): Promise<object> => {
//     const questions = [];
//     if (!options.apps) {
//         questions.push({
//             message: 'Please enter a apps to start. E.g. AppKey1 AppKey2 AppKey3',
//             name: 'apps',
//             type: 'input',
//         });
//     }
//     const answers: any = await inquirer.prompt(questions);
//     return {
//         ...options,
//         apps: options.apps || answers.apps.split(' '),
//     };
// };
//# sourceMappingURL=start-app.js.map