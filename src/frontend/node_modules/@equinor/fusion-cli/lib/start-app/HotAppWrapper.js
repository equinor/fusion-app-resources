"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const fusion_1 = require("@equinor/fusion");
const AppContainer_1 = require("@equinor/fusion/lib/app/AppContainer");
const useAppAuth_1 = require("@equinor/fusion/lib/hooks/useAppAuth");
const getFirstApp = (apps) => Object.keys(apps)[0];
const HotAppWrapper = () => {
    const { app: { container: appContainer }, } = fusion_1.useFusionContext();
    const currentApp = AppContainer_1.useCurrentApp();
    const sendNotification = fusion_1.useNotificationCenter();
    const authorized = useAppAuth_1.useAppAuth(currentApp === null || currentApp === void 0 ? void 0 : currentApp.auth);
    react_1.useEffect(() => {
        !currentApp && appContainer.setCurrentAppAsync(getFirstApp(appContainer.allApps));
        return appContainer.on('update', (apps) => {
            appContainer.setCurrentAppAsync(getFirstApp(apps));
        });
    }, [appContainer.allApps]);
    react_1.useEffect(() => {
        sendNotification({
            cancelLabel: 'I know',
            level: 'low',
            title: 'App updated',
        })
            .then()
            .catch();
    }, [currentApp]);
    if (!currentApp || !authorized) {
        return null;
    }
    const AppComponent = currentApp.AppComponent;
    return AppComponent ? jsx_runtime_1.jsx(AppComponent, {}, void 0) : null;
};
exports.default = HotAppWrapper;
//# sourceMappingURL=HotAppWrapper.js.map