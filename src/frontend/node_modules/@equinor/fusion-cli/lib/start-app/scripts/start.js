"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express = require("express");
const compression = require("compression");
const path = require("path");
const webpack = require("webpack");
const devMiddleware = require("webpack-dev-middleware");
const hotMiddleware = require("webpack-hot-middleware");
const open = require("open");
const getPort = require("get-port");
const babel_1 = require("../../build/parts/babel");
const entry_1 = require("../../build/parts/entry");
const hmr_1 = require("../../build/parts/hmr");
const images_1 = require("../../build/parts/images");
const mode_1 = require("../../build/parts/mode");
const output_1 = require("../../build/parts/output");
const externals_1 = require("../../build/parts/externals");
const styles_1 = require("../../build/parts/styles");
const typescript_1 = require("../../build/parts/typescript");
const env_1 = require("../../build/parts/env");
const getPackageAsync_1 = require("../../build/getPackageAsync");
const getPackageDependencies_1 = require("../../build/getPackageDependencies");
const webpack_merge_1 = require("webpack-merge");
const openBrowser = async (port) => {
    await open(`http://localhost:${port}`);
};
exports.default = async (args) => {
    const appPackage = await getPackageAsync_1.default(path.resolve(process.cwd()));
    const cliPackage = await getPackageAsync_1.default(path.resolve(__dirname, '..', '..', '..'));
    const cliDependencies = await getPackageDependencies_1.default(cliPackage);
    const moduleDependencies = await getPackageDependencies_1.default(appPackage);
    const appWebpackConfig = require(path.resolve(process.cwd(), 'webpack.config.js'));
    const config = webpack_merge_1.merge(babel_1.default, mode_1.default(false), entry_1.default(appPackage, false), output_1.default('app.bundle.js'), hmr_1.default, images_1.default(), externals_1.default(cliDependencies, moduleDependencies), styles_1.default, typescript_1.default('', false), env_1.default(), appWebpackConfig);
    const compiler = webpack(config);
    const app = express();
    const port = await getPort({ port: (args && args.port) || getPort.makeRange(3000, 3100) });
    app.use(compression());
    app.use(devMiddleware(compiler, {
        publicPath: '/',
    }));
    app.use(hotMiddleware(compiler));
    const wwwRoot = path.resolve(__dirname, '..', 'dist');
    app.get('/images/profiles/*', (_req, res) => {
        res.sendFile(path.join(wwwRoot, 'unknown-profile-128.png'), { maxAge: 1000 * 60 * 60 * 24 });
    });
    // tslint:disable-next-line:variable-name
    app.get('/fusion.bundle.js(.map)?', (_req, res) => {
        res.sendFile(path.join(wwwRoot, _req.path));
    });
    // tslint:disable-next-line:variable-name
    app.get(/\/favicon(-\d\dx\d\d)?.(png|ico)$/g, (_req, res) => {
        res.sendFile(path.join(wwwRoot, _req.path));
    });
    // tslint:disable-next-line:variable-name
    app.get(['/', '/*', '*'], (_req, res) => {
        res.sendFile(path.join(wwwRoot, 'index.html'));
    });
    app.listen(port, () => console.log(`Fusion App listening on port ${port}!`));
    await openBrowser(port);
};
//# sourceMappingURL=start.js.map