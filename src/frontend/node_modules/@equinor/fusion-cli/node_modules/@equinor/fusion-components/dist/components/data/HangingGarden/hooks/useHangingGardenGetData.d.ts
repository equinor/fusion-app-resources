import { ApiClients } from '@equinor/fusion';
import { GardenDataError } from '../models/GardenDataError';
/**
 * The useHangingGardenGetData is used by useHangingGardenData for the acutal api call, but can be used on it own.
 *
 * @param client Name of ApiClient to be used when fetching data.
 * @param endpoint Name of endpoint on given ApiClient to be used when fetching data.
 * @returns getData: takes in currentContext Id and InvalidateCache boolean. Does the api call and return the raw data. error: handles errors gives a GardenDataError or null. isFetching: a fetching flag boolean
 * @example
 * const { isFetching, error, getData } = useHangingGardenGetData('ApiClient', 'endpoint');
 *
 * const currentContext = useCurrentContext();
 * const data = await getData(currentContext.id, true);
 *
 */
declare const useHangingGardenGetData: <T, C extends keyof ApiClients, E extends keyof ApiClients[C]>(client: C, endpoint: E) => {
    getData: (currentContext: string, invalidateCache?: boolean) => Promise<{
        data: T[];
        cacheAge: Date;
        cacheDurationInMinutes: number;
    }>;
    error: GardenDataError;
    isFetching: boolean;
};
export default useHangingGardenGetData;
