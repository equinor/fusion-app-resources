import { Component, FC, SyntheticEvent } from 'react';
export declare type ErrorTypes = 'error' | 'accessDenied' | 'notFound' | 'noData' | 'failedDependency' | 'throttle';
export declare type ErrorMessageProps = {
    hasError?: boolean;
    errorType?: ErrorTypes;
    message?: any;
    resourceName?: string;
    title?: string;
    children?: any;
    icon?: any;
    action?: string;
    onTakeAction?: (event?: SyntheticEvent<Element, Event>) => void;
};
export declare const ErrorMessage: FC<ErrorMessageProps>;
declare class ErrorMessageBoundry extends Component<ErrorMessageProps> {
    state: {
        didCatch: boolean;
    };
    render(): JSX.Element;
    componentDidCatch(): void;
}
export default ErrorMessageBoundry;
