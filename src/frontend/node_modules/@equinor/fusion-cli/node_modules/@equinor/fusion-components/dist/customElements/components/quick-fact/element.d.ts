import { LitElement } from '../base';
/** @TODO - fix export in api */
import { QuickFact } from '@equinor/fusion/lib/http/apiClients/models/info/QuickFact';
import { QuickFactEventType, QuickFactEventDetail, QuickFactEvent } from './events';
export declare type ViewMode = 'view' | 'edit';
export interface QuickFactElementProps {
    scope?: string;
    anchor?: string;
}
/**
 * element for displaying a quick fact
 */
export declare class QuickFactElement extends LitElement {
    static styles: import("lit-element/lib/css-tag").CSSResult[];
    /**
     * scope of quick fact
     */
    scope?: string;
    /**
     * active anchor id
     */
    anchor?: string;
    /**
     * display mode of quick fact
     */
    view: ViewMode;
    quickFact?: QuickFact;
    fetching?: boolean;
    error?: Error;
    get client(): import("@equinor/fusion/lib/http/apiClients/InfoClient").InfoClient;
    fetchQuickFact(): Promise<void>;
    /**
     * fetch quick fact from server
     */
    protected _fetchQuickFact(): Promise<QuickFact | null>;
    /**
     * @override listen for changes of scope, anchor and quick fact
     * @param changedProperties - changed properties
     */
    updated(changedProperties: Map<string, any>): void;
    private handleSave;
    private handleEditClick;
    private handleEditCancel;
    private enterEditMode;
    private enterViewMode;
    private renderContent;
    renderMissingQuickFact(): import("lit-html/lib/template-result").TemplateResult;
    render(): import("lit-html/lib/template-result").TemplateResult;
    protected _dispatchEvent(type: QuickFactEventType, init?: CustomEventInit<QuickFactEventDetail>): QuickFactEvent<QuickFactEventType>;
}
export default QuickFactElement;
