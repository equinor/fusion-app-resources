import BaseApiClient from './BaseApiClient';
export default class NotificationClient extends BaseApiClient {
    getBaseUrl() {
        return this.serviceResolver.getNotificationBaseUrl();
    }
    async getNotificationAsync(notificationId) {
        const url = this.resourceCollections.notification.notification(notificationId);
        return this.httpClient.getAsync(url);
    }
    async updateNotificationAsync(notificationId, updatedProperties) {
        const url = this.resourceCollections.notification.notification(notificationId);
        return this.httpClient.patchAsync(url, updatedProperties);
    }
    async deleteNotificationAsync(notificationId) {
        const url = this.resourceCollections.notification.notification(notificationId);
        return this.httpClient.deleteAsync(url, null, () => Promise.resolve());
    }
    async getPersonNotificationsAsync(personId, filter) {
        const url = this.resourceCollections.notification.personNotifications(personId, filter);
        return this.httpClient.getAsync(url);
    }
    async createPersonNotificationAsync(personId, payload) {
        const url = this.resourceCollections.notification.personNotifications(personId);
        return this.httpClient.postAsync(url, payload);
    }
    getPersonNotificationSettingsAsync() {
        const url = this.resourceCollections.notification.personNotificationSettings();
        return this.httpClient.getAsync(url);
    }
    updatePersonNotificationSettings(notificationSettings) {
        const url = this.resourceCollections.notification.personNotificationSettings();
        return this.httpClient.putAsync(url, notificationSettings);
    }
}
