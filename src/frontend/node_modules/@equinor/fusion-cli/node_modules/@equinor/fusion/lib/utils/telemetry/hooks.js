import { useEffect, useMemo } from 'react';
import { useFusionContext } from '../../core/FusionContext';
import { TelemetryObserver } from './TelemetryObserver';
export const useTelemetryLogger = () => {
    const { logging: { telemetry }, } = useFusionContext();
    return telemetry;
};
export const useTelemetryInitializer = (initializer) => {
    const telemetryLogger = useTelemetryLogger();
    useEffect(() => {
        return telemetryLogger.registerInitializer(initializer);
    }, [initializer]);
};
export const useTelemetryObserver = (name, context$) => {
    const telemetry = useTelemetryLogger();
    return useMemo(() => new TelemetryObserver(name, context$, telemetry), [name, context$]);
};
export default { useTelemetryLogger, useTelemetryInitializer, useTelemetryObserver };
