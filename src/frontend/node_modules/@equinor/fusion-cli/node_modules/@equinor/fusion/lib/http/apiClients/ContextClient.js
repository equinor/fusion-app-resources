import BaseApiClient from './BaseApiClient';
export default class ContextClient extends BaseApiClient {
    getBaseUrl() {
        return this.serviceResolver.getContextBaseUrl();
    }
    async getContextsAsync() {
        const url = this.resourceCollections.context.contexts();
        return await this.httpClient.getAsync(url);
    }
    async getContextAsync(id) {
        const url = this.resourceCollections.context.context(id);
        return await this.httpClient.getAsync(url);
    }
    async queryContextsAsync(query, ...types) {
        const url = this.resourceCollections.context.queryContexts(query, ...types);
        return await this.httpClient.getAsync(url);
    }
    async getRelatedContexts(id, ...types) {
        const url = this.resourceCollections.context.relatedContexts(id, ...types);
        return await this.httpClient.getAsync(url);
    }
    async updateContext(context) {
        const url = this.resourceCollections.context.context(context.id);
        return await this.httpClient.putAsync(url, context);
    }
    async createContext(context) {
        const url = this.resourceCollections.context.contexts();
        return await this.httpClient.postAsync(url, context);
    }
}
