import { useState, useEffect } from 'react';
export default class EventEmitter {
    constructor() {
        this.handlers = [];
    }
    on(key, handler) {
        const registeredHandler = {
            key,
            handler,
        };
        this.handlers.push(registeredHandler);
        return () => {
            const index = this.handlers.indexOf(registeredHandler);
            this.handlers.splice(index, 1);
        };
    }
    emit(key, arg) {
        const handlers = this.handlers.filter((h) => h.key === key);
        handlers.forEach((handler) => {
            const handlerFunction = handler.handler;
            window.requestAnimationFrame(() => handlerFunction(arg));
        });
        return this;
    }
}
export const useEventEmitterValue = (emitter, event, transform = (value) => value, defaultData = null) => {
    const [value, setValue] = useState(defaultData);
    const [_, forceUpdate] = useState(null);
    useEffect(() => {
        return emitter.on(event, (data) => {
            setValue(transform(data));
            forceUpdate(null);
        });
    }, [emitter, event]);
    return [value, setValue];
};
export const useEventEmitter = (emitter, event, handler) => {
    useEffect(() => {
        return emitter.on(event, handler);
    }, [emitter, event, handler]);
};
