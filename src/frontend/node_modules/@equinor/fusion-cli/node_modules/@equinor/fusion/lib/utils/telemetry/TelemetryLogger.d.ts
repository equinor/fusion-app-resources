import { ITelemetryItem, IEventTelemetry, IPageViewTelemetry, IExceptionTelemetry, ITraceTelemetry, IDependencyTelemetry, IMetricTelemetry } from '@microsoft/applicationinsights-web';
import { IAuthContainer } from '../../auth/AuthContainer';
export declare type TelemetryInitializer = (item: ITelemetryItem) => void | boolean;
export declare class TelemetryLogger {
    private isInitialized;
    private readonly internalAppInsights;
    private initializers;
    constructor(instrumentationKey: string, authContainer: IAuthContainer);
    registerInitializer(initializer: TelemetryInitializer): () => void;
    trackEvent(event: IEventTelemetry): void;
    trackException(exception: IExceptionTelemetry): void;
    trackPageView(pageView?: IPageViewTelemetry): void;
    trackTrace(trace: ITraceTelemetry): void;
    trackMetric(metrics: IMetricTelemetry): void;
    trackDependency(dependency: IDependencyTelemetry): void;
    private initializeAppInsights;
    private telemetryInitializer;
    private setAuthUserContextAsync;
    private runDefaultInitializers;
    private addCloudRole;
}
export default TelemetryLogger;
