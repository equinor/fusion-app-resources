import BaseApiClient from './BaseApiClient';
import getScript from '../../utils/getScript';
export default class FusionClient extends BaseApiClient {
    getBaseUrl() {
        return this.serviceResolver.getFusionBaseUrl();
    }
    async getAppsAsync() {
        const url = this.resourceCollections.fusion.apps();
        return await this.httpClient.getAsync(url);
    }
    async getAppManifestAsync(appKey) {
        const url = this.resourceCollections.fusion.appManifest(appKey);
        return await this.httpClient.getAsync(url);
    }
    async loadAppScriptAsync(appKey) {
        const url = this.resourceCollections.fusion.appScript(appKey);
        return await getScript(url);
    }
    async logFeaturesAsync(batch) {
        const url = this.resourceCollections.fusion.featureLog();
        return await this.httpClient.postAsync(url, batch, null, () => Promise.resolve());
    }
    async getAppIconAsync(appKey) {
        const url = this.resourceCollections.fusion.appIcon(appKey);
        return await this.httpClient.getAsync(url, { credentials: 'include' }, async (response) => {
            return await response.text();
        });
    }
    async negotiateSignalRHub(hubName) {
        const url = this.resourceCollections.fusion.signalRHub(hubName);
        return await this.httpClient.postAsync(url, undefined);
    }
}
