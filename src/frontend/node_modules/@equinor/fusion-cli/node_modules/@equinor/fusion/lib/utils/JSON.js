const dateRegex = /[0-9]{4}-[0-9]{2}-[0-9]{2}[a-zA-Z]{1}[0-9]{2}:[0-9]{2}:[0-9]{2}/im;
const revivers = [
    (key, value) => {
        if (typeof value === 'string' && dateRegex.test(value)) {
            const parsedDate = new Date(value);
            if (!isNaN(parsedDate.getTime())) {
                return parsedDate;
            }
        }
        return value;
    },
];
const replacers = [];
const combine = (parsers) => (key, value) => {
    return parsers.reduce((val, parser) => parser(key, val), value);
};
const reviver = combine(revivers);
const replacer = combine(replacers);
const parse = (value) => {
    const parsed = JSON.parse(value, reviver);
    return parsed;
};
const stringify = (data) => {
    return JSON.stringify(data, replacer);
};
export default { parse, stringify };
