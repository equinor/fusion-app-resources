import BaseResourceCollection from './BaseResourceCollection';
import { combineUrls } from '../../utils/url';
export default class ReportResourceCollection extends BaseResourceCollection {
    getBaseUrl() {
        return combineUrls(this.serviceResolver.getReportsBaseUrl());
    }
    reports() {
        return combineUrls(this.getBaseUrl(), 'reports');
    }
    report(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId);
    }
    accessToken(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'token');
    }
    description(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'description', 'content');
    }
    technicalDocument(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'technicaldocument', 'content');
    }
    accessDescription(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'accessdescription', 'content');
    }
    securityPermission(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'securitypermission', 'content');
    }
    validateConfig() {
        return combineUrls(this.getBaseUrl(), 'reports', 'config', 'validate');
    }
    updateConfig(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'config');
    }
    embedInfo(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'config', 'embedinfo');
    }
    publishReport(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'publish');
    }
    unPublishReport(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'unpublish');
    }
    rlsRequirements(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'rlsrequirements');
    }
    auditLog(reportId) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'auditlog');
    }
    checkAccess(reportId, contextExternalId, contextType) {
        return combineUrls(this.getBaseUrl(), 'reports', reportId, 'contexts', contextExternalId, 'contexttypes', contextType, 'checkaccess');
    }
}
