import BaseApiClient from './BaseApiClient';
import PersonDetails, { PersonAccountType, PersonRole, PersonBasePosition, PersonContract, PersonPosition, PersonProject, PersonRoleScope, PersonPresence } from './models/people/PersonDetails';
import RoleDefinition from './models/people/RoleDefinition';
import { PersonODataExpand } from '../resourceCollections/PeopleResourceCollection';
import GroupRoleMapping from './models/people/GroupRoleMapping';
export { PersonDetails, PersonAccountType, PersonRole, PersonBasePosition, PersonContract, PersonPosition, PersonProject, PersonRoleScope, PersonODataExpand, };
export default class PeopleClient extends BaseApiClient {
    apiSignInAsync(): Promise<void>;
    protected getBaseUrl(): string;
    getPersonDetailsAsync(id: string, oDataExpand?: PersonODataExpand[]): Promise<import("../HttpClient").HttpResponse<PersonDetails>>;
    getRoleDefinitionsAsync(): Promise<import("../HttpClient").HttpResponse<RoleDefinition[]>>;
    getGroupRoleMappingsAsync(): Promise<import("../HttpClient").HttpResponse<GroupRoleMapping[]>>;
    searchPersons(query: string): Promise<import("../HttpClient").HttpResponse<PersonDetails[]>>;
    setRoleStatusForCurrentUser(roleName: string, active: boolean): Promise<import("../HttpClient").HttpResponse<PersonRole>>;
    setRoleStatusForUser(userId: string, roleName: string, active: boolean): Promise<import("../HttpClient").HttpResponse<PersonRole>>;
    getPresenceAsync(userId: string): Promise<import("../HttpClient").HttpResponse<PersonPresence>>;
}
