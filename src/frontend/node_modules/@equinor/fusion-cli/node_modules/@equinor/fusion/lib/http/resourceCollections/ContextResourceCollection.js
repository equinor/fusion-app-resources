import buildQuery from 'odata-query';
import BaseResourceCollection from './BaseResourceCollection';
import { combineUrls } from '../../utils/url';
export default class ContextResourceCollection extends BaseResourceCollection {
    getBaseUrl() {
        return this.serviceResolver.getContextBaseUrl();
    }
    apiSignin() {
        return combineUrls(this.getBaseUrl(), 'api-signin');
    }
    contexts() {
        return combineUrls(this.getBaseUrl(), 'contexts');
    }
    context(id) {
        return combineUrls(this.contexts(), id);
    }
    queryContexts(query, ...types) {
        const baseUrl = this.contexts();
        const oDataQuery = buildQuery({
            filter: {
                type: { in: types },
            },
            search: query,
        });
        return `${baseUrl}${oDataQuery}`;
    }
    relatedContexts(id, ...types) {
        const oDataQuery = buildQuery({
            filter: {
                type: { in: types },
            },
        });
        return combineUrls(this.context(id), `relations${oDataQuery}`);
    }
}
