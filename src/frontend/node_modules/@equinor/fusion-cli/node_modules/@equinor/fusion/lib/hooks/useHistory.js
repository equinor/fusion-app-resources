import { createContext, useContext, useEffect, useState } from 'react';
import { useFusionContext } from '../core/FusionContext';
const ensureGlobalFusionHistoryContextType = () => {
    const win = window;
    const key = 'EQUINOR_FUSION_HISTORY_CONTEXT';
    if (typeof win[key] !== undefined && win[key]) {
        return win[key];
    }
    const fusionContext = createContext({ history: null });
    win[key] = fusionContext;
    return fusionContext;
};
export const HistoryContext = ensureGlobalFusionHistoryContextType();
export default () => {
    const fusionContext = useFusionContext();
    const historyContext = useContext(HistoryContext);
    const history = historyContext.history || fusionContext.history;
    const [_, forceUpdate] = useState(null);
    useEffect(() => {
        const listner = history.listen(() => forceUpdate(null));
        return listner;
    }, [history]);
    return historyContext.history || fusionContext.history;
};
