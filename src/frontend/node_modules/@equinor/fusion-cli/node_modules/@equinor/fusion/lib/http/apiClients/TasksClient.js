import BaseApiClient from './BaseApiClient';
export default class TasksClient extends BaseApiClient {
    getBaseUrl() {
        return this.serviceResolver.getTasksBaseUrl();
    }
    async getSourceSystemsAsync() {
        const url = this.resourceCollections.tasks.sourceSystems();
        return this.httpClient.getAsync(url);
    }
    async getTaskTypesAsync() {
        const url = this.resourceCollections.tasks.taskTypes();
        return this.httpClient.getAsync(url);
    }
    async getAllTasksAsync(type) {
        const url = this.resourceCollections.tasks.tasks(type);
        return this.httpClient.getAsync(url);
    }
    async getTaskCountAsync(type) {
        const url = this.resourceCollections.tasks.tasks(type);
        return await this.httpClient.getAsync(url, null, async (response) => {
            const responseText = await response.text();
            return parseInt(responseText, 10);
        });
    }
    async queryTasksAsync(queryText) {
        const url = this.resourceCollections.tasks.query(queryText);
        return this.httpClient.getAsync(url);
    }
    async setTaskPriorityAsync(id, priority) {
        const url = this.resourceCollections.tasks.priority(id);
        await this.httpClient.patchAsync(url, priority, null, async () => await Promise.resolve());
    }
    async refreshTasksAsync(type, refreshRequest) {
        const url = this.resourceCollections.tasks.tasks(type);
        return this.httpClient.getAsync(url, refreshRequest);
    }
}
