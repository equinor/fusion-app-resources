import IReliableDictionaryStorageProvider, { ReliableDictionaryStorageProviderEvents } from './IReliableDictionaryStorageProvider';
import { IEventHub } from '../EventHub';
import EventEmitter from '../EventEmitter';
declare type LocalCache = {
    [key: string]: any;
};
export default class LocalStorageProvider extends EventEmitter<ReliableDictionaryStorageProviderEvents> implements IReliableDictionaryStorageProvider {
    private baseKey;
    private localCache;
    constructor(baseKey: string, eventHub: IEventHub, defaultValue?: LocalCache);
    getItemAsync<T>(key: string): Promise<T | null>;
    setItemAsync<T>(key: string, value: T): Promise<void>;
    removeItemAsync(key: string): Promise<void>;
    clearAsync(): Promise<void>;
    toObjectAsync(): Promise<LocalCache>;
    toObject(): LocalCache | null;
    private persistAsync;
}
export {};
