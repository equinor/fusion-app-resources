import { OrgChartItemProps, OrgNode } from '@equinor/fusion-components';
import { FC, Context, Dispatch } from 'react';
declare type Action<T> = {
    type: 'UPDATE_SIZE';
    width?: number;
    height?: number;
} | {
    type: 'UPDATE_CARD_SIZE';
    width?: number;
    height?: number;
    margin?: number;
    initialWidth?: number;
} | {
    type: 'UPDATE_ROW_MARGIN';
    margin: number;
} | {
    type: 'UPDATE_NODES';
    nodes: OrgNode<T>[];
} | {
    type: 'UPDATE_COMPONENT';
    component: FC<OrgChartItemProps<T>>;
} | {
    type: 'UPDATE_CHILDREN_ROWS';
    rows: number;
} | {
    type: 'UPDATE_POSITION';
    node: OrgNode<T>;
    x: number;
    y: number;
};
export declare type ReportingPathContextType<T> = {
    width: number;
    height: number;
    cardWidth: number;
    cardHeight: number;
    cardMargin: number;
    initialCardWidth: number;
    rowMargin: number;
    allNodes: OrgNode<T>[];
    component: FC<OrgChartItemProps<T>> | null;
    childrenRows: number;
};
export declare type ReportingPathContextReducer<T> = {
    state: ReportingPathContextType<T>;
    dispatch: Dispatch<Action<T>>;
};
export declare const ReportingPathContext: Context<ReportingPathContextReducer<any>>;
export declare function ReportingPathContextProvider<T>({ children }: any): JSX.Element;
export {};
