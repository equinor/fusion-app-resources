import { LitElement, PropertyValues } from '../base';
import { OverlayEvent, OverlayEventType, OverLayScope } from '../overlay';
import { QuickFactEvent, QuickFactEventType } from '../quick-fact';
import { ApplicationGuideEvent, ApplicationGuideEventType, ApplicationGuideEventDetail } from './events';
export interface ApplicationGuideElementProps {
    scope?: OverLayScope;
}
export declare class ApplicationGuideElement extends LitElement implements ApplicationGuideElementProps {
    static styles: import("lit-element/lib/css-tag").CSSResult[];
    scope?: OverLayScope;
    active: boolean;
    selected?: {
        scope: string;
        anchor: string;
    };
    toggle(): void;
    popover: HTMLDivElement;
    protected _dragStart: any;
    render(): import("lit-html/lib/template-result").TemplateResult;
    renderQuickFact(): "" | import("lit-html/lib/template-result").TemplateResult;
    protected updated(props: PropertyValues): void;
    protected _dispatchEvent(type: ApplicationGuideEventType, init?: CustomEventInit<ApplicationGuideEventDetail>): ApplicationGuideEvent<ApplicationGuideEventType>;
    protected _handleSelectionChanged(e: OverlayEvent<OverlayEventType.selection>): void;
    protected _handleQuickFactShow(e: QuickFactEvent<QuickFactEventType.show>): void;
    protected _handleDragStart(e: DragEvent): void;
    protected _handleDragEnd(e: DragEvent): void;
}
export default ApplicationGuideElement;
