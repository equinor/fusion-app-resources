import EventEmitter from '../utils/EventEmitter';
import { useFusionContext } from './FusionContext';
import { useEffect } from 'react';
import DistributedState from '../utils/DistributedState';
export default class UserMenuContainer extends EventEmitter {
    constructor(eventHub) {
        super();
        this._sections = new DistributedState('userMenuSections', [], eventHub);
        this._sections.on('change', (sections) => {
            this.emit('change', sections);
        });
    }
    get sections() {
        return [...this._sections.state];
    }
    registerSection(section) {
        this._sections.state = [...this.sections, section];
        this.emit('change', this.sections);
        return () => this.unregisterSection(section);
    }
    unregisterSection(section) {
        this._sections.state = this.sections.filter((s) => s.key !== section.key);
        this.emit('change', this.sections);
    }
}
export const useCustomUserMenuSection = (section) => {
    const { userMenuSectionsContainer } = useFusionContext();
    useEffect(() => {
        const unregister = userMenuSectionsContainer.registerSection(section);
        return () => unregister();
    }, [section]);
};
