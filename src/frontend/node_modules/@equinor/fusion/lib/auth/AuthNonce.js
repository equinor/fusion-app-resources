import * as uuid from 'uuid/v1';
export class FusionNonceNotFoundError extends Error {
    constructor(key) {
        super(`Unable to find nonce [${key}]`);
    }
}
export default class AuthNonce {
    constructor(key, value) {
        this.key = key;
        this.value = value;
    }
    static createCacheKey(key) {
        return `FUSION_AUTH_NONCE:${key}`;
    }
    static createNew(app) {
        const id = uuid();
        const nonce = new AuthNonce(id, app.clientId);
        localStorage.setItem(AuthNonce.createCacheKey(nonce.key), nonce.toString());
        return nonce;
    }
    static resolve(key) {
        const cacheKey = AuthNonce.createCacheKey(key);
        const value = localStorage.getItem(cacheKey);
        if (!value) {
            throw new FusionNonceNotFoundError(key);
        }
        const nonce = new AuthNonce(key, value);
        localStorage.removeItem(cacheKey);
        return nonce;
    }
    toString() {
        return this.value;
    }
    getKey() {
        return this.key;
    }
    validate(nonce) {
        return nonce && nonce.value === this.value;
    }
}
