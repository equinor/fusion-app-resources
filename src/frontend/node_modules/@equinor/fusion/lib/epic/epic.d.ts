import { Observable } from 'rxjs';
import { PayloadActionCreator } from 'typesafe-actions';
import { StatefulObserver } from './StatefulObserver';
export declare type ObservableType<T> = T extends Observable<infer R> ? R : T;
export declare type Action<T extends string = string> = {
    type: T;
};
export declare type ActionError<T = Error | any, A extends Action = any> = {
    error: T;
    action: A;
};
export declare type ActionPayload<T> = T extends PayloadActionCreator<string, infer R> ? R : T;
export declare type Epic<Input extends Action = any, Output extends Input = Input, State = any, Dependencies = any> = (action$: Observable<Input>, state$: StatefulObserver<State>, dependencies: Dependencies) => Observable<Output>;
