import { useLayoutEffect, useState } from 'react';
import { distinctUntilChanged } from 'rxjs/operators';
/**
 * Hook for selecting an attribute of a epic
 * @param reducer
 * @param property
 * @param compare
 */
export const useObservableState = (state$, options) => {
    const [state, setState] = useState(options === null || options === void 0 ? void 0 : options.initial);
    useLayoutEffect(() => {
        const subscription = state$
            .pipe(distinctUntilChanged(options === null || options === void 0 ? void 0 : options.compare))
            .subscribe(setState);
        return () => subscription.unsubscribe();
    }, [setState, state$, options === null || options === void 0 ? void 0 : options.compare]);
    return state;
};
export default useObservableState;
