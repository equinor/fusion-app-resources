import BaseApiClient from './BaseApiClient';
import NotificationCard from './models/NotificationCard/NotificationCard';
import { CreateNotification } from './models/NotificationCard/CreateNotification';
import PagedCollection from '../models/PagedCollection';
import { PersonNotificationSettings } from './models/people/PersonDetails';
export default class NotificationClient extends BaseApiClient {
    protected getBaseUrl(): string;
    getNotificationAsync(notificationId: string): Promise<import("../HttpClient").HttpResponse<NotificationCard>>;
    updateNotificationAsync(notificationId: string, updatedProperties: Partial<NotificationCard>): Promise<import("../HttpClient").HttpResponse<NotificationCard>>;
    deleteNotificationAsync(notificationId: string): Promise<import("../HttpClient").HttpResponse<void>>;
    getPersonNotificationsAsync(personId: string, filter?: string): Promise<import("../HttpClient").HttpResponse<PagedCollection<NotificationCard[]>>>;
    createPersonNotificationAsync(personId: string, payload: CreateNotification): Promise<import("../HttpClient").HttpResponse<NotificationCard>>;
    getPersonNotificationSettingsAsync(): Promise<import("../HttpClient").HttpResponse<PersonNotificationSettings>>;
    updatePersonNotificationSettings(notificationSettings: PersonNotificationSettings): Promise<import("../HttpClient").HttpResponse<PersonNotificationSettings>>;
}
