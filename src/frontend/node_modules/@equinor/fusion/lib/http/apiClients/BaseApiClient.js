import { combineUrls } from '../../utils/url';
export default class BaseApiClient {
    constructor(httpClient, resourceCollections, serviceResolver) {
        this.httpClient = httpClient;
        this.resourceCollections = resourceCollections;
        this.serviceResolver = serviceResolver;
    }
    async getAsync(path, init, responseParser) {
        const url = combineUrls(this.getBaseUrl(), path);
        return await this.httpClient.getAsync(url, init, responseParser);
    }
    async postAsync(path, body, init, responseParser) {
        const url = combineUrls(this.getBaseUrl(), path);
        return await this.httpClient.postAsync(url, body, init, responseParser);
    }
    async putAsync(path, body, init, responseParser) {
        const url = combineUrls(this.getBaseUrl(), path);
        return await this.httpClient.putAsync(url, body, init, responseParser);
    }
    async patchAsync(path, body, init, responseParser) {
        const url = combineUrls(this.getBaseUrl(), path);
        return await this.httpClient.patchAsync(url, body, init, responseParser);
    }
    async deleteAsync(path, init, responseParser) {
        const url = combineUrls(this.getBaseUrl(), path);
        return await this.httpClient.deleteAsync(url, init, responseParser);
    }
}
