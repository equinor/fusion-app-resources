import BaseResourceCollection from './BaseResourceCollection';
import { combineUrls } from '../../utils/url';
import buildQuery from 'odata-query';
export default class PeopleResourceCollection extends BaseResourceCollection {
    getBaseUrl() {
        return this.serviceResolver.getPeopleBaseUrl();
    }
    apiSignin() {
        return combineUrls(this.getBaseUrl(), 'api-signin');
    }
    getPersonDetails(id, oDataExpand) {
        const url = combineUrls(this.getBaseUrl(), 'persons', id);
        if (!oDataExpand)
            return url;
        const expand = oDataExpand ? oDataExpand.map((s) => s) : [];
        const oDataQuery = buildQuery({ expand });
        return `${url}${oDataQuery}`;
    }
    getPersonPhoto(id) {
        return combineUrls(this.getBaseUrl(), 'persons', id, 'photo');
    }
    roleDefinitions() {
        return combineUrls(this.getBaseUrl(), 'roles');
    }
    groupRoleMappings() {
        return combineUrls(this.getBaseUrl(), 'roles', 'mappings');
    }
    searchPersons(query) {
        const oDataQuery = buildQuery({ search: query });
        const url = combineUrls(this.getBaseUrl(), 'persons');
        return `${url}${oDataQuery}`;
    }
    roleStatusCurrentUser(roleName) {
        return combineUrls(this.getBaseUrl(), 'persons', 'me', 'roles', roleName);
    }
    roleStatus(userId, roleName) {
        return combineUrls(this.getBaseUrl(), 'persons', userId, 'roles', roleName);
    }
    personPresence(userId) {
        return combineUrls(this.getPersonDetails(userId), 'presence');
    }
}
