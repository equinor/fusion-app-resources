import BaseResourceCollection from './BaseResourceCollection';
import { combineUrls } from '../../utils/url';
export default class DataProxyResourceCollection extends BaseResourceCollection {
    getBaseUrl() {
        return this.serviceResolver.getDataProxyBaseUrl();
    }
    apiSignin() {
        return combineUrls(this.getBaseUrl(), 'api-signin');
    }
    operation(context) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', context, 'operation');
    }
    handover(context) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', context, 'handover');
    }
    handoverChildren(context, commpkgId, action) {
        return combineUrls(this.handover(context), commpkgId, action);
    }
    accumulatedItem(siteCode, projectIdentifier, action) {
        return this.getSiteAndProjectUrl(siteCode, projectIdentifier, `${action}-accumulated`);
    }
    milestones(contextId) {
        return combineUrls(this.getBaseUrl(), `api/contexts/${contextId}/milestones`);
    }
    workOrders(contextId) {
        return combineUrls(this.getBaseUrl(), `api/contexts/${contextId}/work-orders`);
    }
    workOrdersMaterials(contextId, workOrderId) {
        return combineUrls(this.getBaseUrl(), `api/contexts/${contextId}/work-orders/${workOrderId}/material`);
    }
    workOrdersMccr(contextId, workOrderId) {
        return combineUrls(this.getBaseUrl(), `api/contexts/${contextId}/work-orders/${workOrderId}/mccr`);
    }
    mcPackages(contextId) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', contextId, 'mc-pkgs');
    }
    mcWorkOrders(contextId, mcPackageId) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', contextId, 'mc-pkgs', mcPackageId, 'work-orders');
    }
    mcNcr(contextId, mcPackageId) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', contextId, 'mc-pkgs', mcPackageId, 'ncr');
    }
    mcPunch(contextId, mcPackageId) {
        return combineUrls(this.getBaseUrl(), 'api', 'contexts', contextId, 'mc-pkgs', mcPackageId, 'punch');
    }
}
