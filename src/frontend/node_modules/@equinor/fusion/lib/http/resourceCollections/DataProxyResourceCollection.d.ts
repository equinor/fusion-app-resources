import BaseResourceCollection from './BaseResourceCollection';
import { AccumulatedContainer, HandoverMcpkg, HandoverWorkOrder, HandoverUnsignedTask, HandoverUnsignedAction, HandoverPunch, HandoverSWCR, HandoverDetails, HandoverNCR, HandoverQuery } from '../apiClients/models/dataProxy';
export declare type AccumulatedActions = {
    mccr: AccumulatedContainer;
    punch: AccumulatedContainer;
    commpkg: AccumulatedContainer;
    productivity: AccumulatedContainer;
    womaterial: AccumulatedContainer;
    installation: AccumulatedContainer;
    earnedplanned: AccumulatedContainer;
};
export declare type HandoverActions = {
    mcpkg: HandoverMcpkg;
    'work-orders': HandoverWorkOrder;
    'unsigned-tasks': HandoverUnsignedTask;
    'unsigned-actions': HandoverUnsignedAction;
    punch: HandoverPunch;
    swcr: HandoverSWCR;
    details: HandoverDetails;
    ncr: HandoverNCR;
    query: HandoverQuery;
};
export default class DataProxyResourceCollection extends BaseResourceCollection {
    protected getBaseUrl(): string;
    apiSignin(): string;
    operation(context: string): string;
    handover(context: string): string;
    handoverChildren(context: string, commpkgId: string, action: keyof HandoverActions): string;
    accumulatedItem(siteCode: string, projectIdentifier: string, action: keyof AccumulatedActions): string;
    milestones(contextId: string): string;
    workOrders(contextId: string): string;
    workOrdersMaterials(contextId: string, workOrderId: string): string;
    workOrdersMccr(contextId: string, workOrderId: string): string;
    mcPackages(contextId: string): string;
    mcWorkOrders(contextId: string, mcPackageId: string): string;
    mcNcr(contextId: string, mcPackageId: string): string;
    mcPunch(contextId: string, mcPackageId: string): string;
}
