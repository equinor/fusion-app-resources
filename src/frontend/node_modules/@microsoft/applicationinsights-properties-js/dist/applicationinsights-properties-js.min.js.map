{"version":3,"file":"applicationinsights-properties-js.min.js","sources":["../../../tools/shims/dist-esm/applicationinsights-shims.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/EnvUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../common/temp/node_modules/@microsoft/dynamicproto-js/lib/dist/esm/dynamicproto-js.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/PerfManager.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/TelemetryPluginChain.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/TelemetryHelpers.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/BaseCore.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../dist-esm/Context/Session.js","../dist-esm/Context/Application.js","../dist-esm/Context/Device.js","../dist-esm/Context/Internal.js","../dist-esm/Context/User.js","../dist-esm/Context/Location.js","../dist-esm/Context/TelemetryTrace.js","../dist-esm/TelemetryContext.js","../dist-esm/PropertiesPlugin.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strShimHasOwnProperty = \"hasOwnProperty\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal() {\r\n    if (typeof globalThis !== strShimUndefined && globalThis) {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== strShimUndefined && self) {\r\n        return self;\r\n    }\r\n    if (typeof window !== strShimUndefined && window) {\r\n        return window;\r\n    }\r\n    if (typeof global !== strShimUndefined && global) {\r\n        return global;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj) {\r\n    var func = Object[\"create\"];\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throw new TypeError('Object prototype may only be an Object:' + obj);\r\n    }\r\n    function tmpFunc() { }\r\n    tmpFunc[strShimPrototype] = obj;\r\n    return new tmpFunc();\r\n}\r\nexport function __assignFn(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (Object[strShimPrototype][strShimHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar __extendStaticsFn = function (d, b) {\r\n    __extendStaticsFn = Object[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strShimHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return __extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    __extendStaticsFn(d, b);\r\n    function __() { this.constructor = d; }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreateFn(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nvar globalObj = getGlobal() || {};\r\n// tslint:disable: only-arrow-functions\r\n(function (root, assignFn, extendsFn) {\r\n    // Assign the globally scoped versions of the functions -- used when consuming individual ts files\r\n    // If check is to support NativeScript where these are marked as readonly\r\n    if (!root.__assign) {\r\n        root.__assign = Object.assign || assignFn;\r\n    }\r\n    if (!root.__extends) {\r\n        root.__extends = extendsFn;\r\n    }\r\n})(globalObj, __assignFn, __extendsFn);\r\n// Assign local variables that will be used for embedded scenarios, if check is to support NativeScript where these are marked as readonly\r\nif (!__assign) {\r\n    __assign = globalObj.__assign;\r\n}\r\nif (!__extends) {\r\n    __extends = globalObj.__extends;\r\n}\r\n//# sourceMappingURL=applicationinsights-shims.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { getGlobal as shimsGetGlobal, strShimUndefined, strShimObject, strShimPrototype, strShimFunction } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n * This file exists to hold environment utilities that are requied to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nexport var strUndefined = strShimUndefined;\r\nexport var strObject = strShimObject;\r\nexport var strPrototype = strShimPrototype;\r\nexport var strFunction = strShimFunction;\r\nvar strWindow = \"window\";\r\nvar strDocument = \"document\";\r\nvar strNavigator = \"navigator\";\r\nvar strHistory = \"history\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strPerformance = \"performance\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport var getGlobal = shimsGetGlobal;\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst(name) {\r\n    var gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name];\r\n    }\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return window;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow() {\r\n    return Boolean(typeof window === strObject && window);\r\n}\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow() {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument() {\r\n    return Boolean(typeof document === strObject && document);\r\n}\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument() {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n    return getGlobalInst(strDocument);\r\n}\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator() {\r\n    return Boolean(typeof navigator === strObject && navigator);\r\n}\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator() {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n    return getGlobalInst(strNavigator);\r\n}\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory() {\r\n    return Boolean(typeof history === strObject && history);\r\n}\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory() {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n    return getGlobalInst(strHistory);\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation() {\r\n    if (typeof location === strObject && location) {\r\n        return location;\r\n    }\r\n    return getGlobalInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strUndefined) {\r\n        return console;\r\n    }\r\n    return getGlobalInst(strConsole);\r\n}\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance() {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getGlobalInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getGlobalInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { objCreateFn, strShimObject, strShimUndefined, strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getWindow, getDocument, getCrypto, getPerformance, getMsCrypto, getNavigator } from './EnvUtils';\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar _isTrident = null;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = 123456789;\r\nvar _mwcZ = 987654321;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (123456789 + seedValue) & MaxUInt32;\r\n    _mwcZ = (987654321 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    _mwcSeed((Math.random() * UInt32Mask) ^ new Date().getTime());\r\n}\r\nfunction _isTypeof(value, theType) {\r\n    return typeof value === theType;\r\n}\r\n;\r\nfunction _isUndefined(value) {\r\n    return _isTypeof(value, strShimUndefined) || value === undefined;\r\n}\r\n;\r\nfunction _isNullOrUndefined(value) {\r\n    return (_isUndefined(value) || value === null);\r\n}\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Object[strShimPrototype].hasOwnProperty.call(obj, prop);\r\n}\r\n;\r\nfunction _isObject(value) {\r\n    return _isTypeof(value, strShimObject);\r\n}\r\n;\r\nfunction _isFunction(value) {\r\n    return _isTypeof(value, strShimFunction);\r\n}\r\n;\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nfunction _attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strAddEventHelper])) {\r\n                // all browsers except IE before version 9\r\n                obj[strAddEventHelper](eventNameWithoutOn, handlerRef, useCapture);\r\n                result = true;\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strAttachEvent])) {\r\n                // IE before version 9                    \r\n                obj[strAttachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventNameWithoutOn {string} - The name of the event\r\n * @param handlerRef {any} - The callback function that needs to be executed for the given event\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nfunction _detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strRemoveEventListener])) {\r\n                obj[strRemoveEventListener](eventNameWithoutOn, handlerRef, useCapture);\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strDetachEvent])) {\r\n                obj[strDetachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n * and executed in an ES3 container, providing basic IE8 compatibility.\r\n * @param target The object on which to define the property.\r\n * @param prop The name of the property to be defined or modified.\r\n * @param getProp The getter function to wire against the getter.\r\n * @param setProp The setter function to wire against the setter.\r\n * @returns True if it was able to create the accessors otherwise false\r\n */\r\nexport function objDefineAccessors(target, prop, getProp, setProp) {\r\n    var defineProp = Object[\"defineProperty\"];\r\n    if (defineProp) {\r\n        try {\r\n            var descriptor = {\r\n                enumerable: true,\r\n                configurable: true\r\n            };\r\n            if (getProp) {\r\n                descriptor.get = getProp;\r\n            }\r\n            if (setProp) {\r\n                descriptor.set = setProp;\r\n            }\r\n            defineProp(target, prop, descriptor);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n            // We will just ignore this here.\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    var match = /([^\\w\\d_$])/g;\r\n    if (match.test(name)) {\r\n        value = name.replace(match, \"_\");\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is a helper function for the equivalent of arForEach(objKeys(target), callbackFn), this is a\r\n * performance optimization to avoid the creation of a new array for large objects\r\n * @param target The target object to find and process the keys\r\n * @param callbackfn The function to call with the details\r\n */\r\nexport function objForEachKey(target, callbackfn) {\r\n    if (target && _isObject(target)) {\r\n        for (var prop in target) {\r\n            if (_hasOwnProperty(target, prop)) {\r\n                callbackfn.call(target, prop, target[prop]);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n * @memberof Initialization\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && target !== source && _isObject(target) && _isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (CoreUtils.isString(field)) {\r\n                var value = source[field];\r\n                if (_isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = (function (funcName) {\r\n                            return function () {\r\n                                // Capture the original arguments passed to the method\r\n                                var originalArguments = arguments;\r\n                                return source[funcName].apply(source, originalArguments);\r\n                            };\r\n                        })(field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (_hasOwnProperty(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    if (!objDefineAccessors(target, field, function () {\r\n                        return source[field];\r\n                    }, function (theValue) {\r\n                        source[field] = theValue;\r\n                    })) {\r\n                        // Unable to create an accessor, so just assign the values as a fallback\r\n                        // -- this will (mostly) work for objects\r\n                        // -- but will fail for accessing primitives (if the source changes it) and all types of \"setters\" as the source won't be modified\r\n                        target[field] = value;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    CoreUtils.isDate = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    CoreUtils.isArray = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    CoreUtils.isError = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Checks if the type of value is a string.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a string, false otherwise.\r\n     */\r\n    CoreUtils.isString = function (value) {\r\n        return _isTypeof(value, \"string\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a number.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a number, false otherwise.\r\n     */\r\n    CoreUtils.isNumber = function (value) {\r\n        return _isTypeof(value, \"number\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a boolean.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isBoolean = function (value) {\r\n        return _isTypeof(value, \"boolean\");\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        function randomHexDigit() {\r\n            return CoreUtils.randomValue(15); // Get a random value from 0..15\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (randomHexDigit() | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    CoreUtils.toISOString = function (date) {\r\n        if (CoreUtils.isDate(date)) {\r\n            var pad = function (num) {\r\n                var r = String(num);\r\n                if (r.length === 1) {\r\n                    r = \"0\" + r;\r\n                }\r\n                return r;\r\n            };\r\n            return date.getUTCFullYear()\r\n                + \"-\" + pad(date.getUTCMonth() + 1)\r\n                + \"-\" + pad(date.getUTCDate())\r\n                + \"T\" + pad(date.getUTCHours())\r\n                + \":\" + pad(date.getUTCMinutes())\r\n                + \":\" + pad(date.getUTCSeconds())\r\n                + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                + \"Z\";\r\n        }\r\n    };\r\n    /**\r\n     * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrForEach = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        for (var idx = 0; idx < len; idx++) {\r\n            if (idx in arr) {\r\n                callbackfn.call(thisArg || arr, arr[idx], idx, arr);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    CoreUtils.arrIndexOf = function (arr, searchElement, fromIndex) {\r\n        var len = arr.length;\r\n        var from = fromIndex || 0;\r\n        for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {\r\n            if (lp in arr && arr[lp] === searchElement) {\r\n                return lp;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists\r\n     * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page\r\n     * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx\r\n     * implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrMap = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        var _this = thisArg || arr;\r\n        var results = new Array(len);\r\n        for (var lp = 0; lp < len; lp++) {\r\n            if (lp in arr) {\r\n                results[lp] = callbackfn.call(_this, arr[lp], arr);\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is\r\n     * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define\r\n     * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency\r\n     * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    CoreUtils.arrReduce = function (arr, callbackfn, initialValue) {\r\n        var len = arr.length;\r\n        var lp = 0;\r\n        var value;\r\n        // Specifically checking the number of passed arguments as the value could be anything\r\n        if (arguments.length >= 3) {\r\n            value = arguments[2];\r\n        }\r\n        else {\r\n            while (lp < len && !(lp in arr)) {\r\n                lp++;\r\n            }\r\n            value = arr[lp++];\r\n        }\r\n        while (lp < len) {\r\n            if (lp in arr) {\r\n                value = callbackfn(value, arr[lp], lp, arr);\r\n            }\r\n            lp++;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    CoreUtils.strTrim = function (str) {\r\n        if (!CoreUtils.isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    CoreUtils.objKeys = function (obj) {\r\n        var hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString');\r\n        if (!_isFunction(obj) && (!_isObject(obj) || obj === null)) {\r\n            throw new TypeError('objKeys called on non-object');\r\n        }\r\n        var result = [];\r\n        for (var prop in obj) {\r\n            if (_hasOwnProperty(obj, prop)) {\r\n                result.push(prop);\r\n            }\r\n        }\r\n        if (hasDontEnumBug) {\r\n            var dontEnums = [\r\n                'toString',\r\n                'toLocaleString',\r\n                'valueOf',\r\n                'hasOwnProperty',\r\n                'isPrototypeOf',\r\n                'propertyIsEnumerable',\r\n                'constructor'\r\n            ];\r\n            var dontEnumsLength = dontEnums.length;\r\n            for (var lp = 0; lp < dontEnumsLength; lp++) {\r\n                if (_hasOwnProperty(obj, dontEnums[lp])) {\r\n                    result.push(dontEnums[lp]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Trys to add an event handler for the specified event to the window, body and document\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    CoreUtils.addEventHandler = function (eventName, callback) {\r\n        var result = false;\r\n        var w = getWindow();\r\n        if (w) {\r\n            result = _attachEvent(w, eventName, callback);\r\n            result = _attachEvent(w[\"body\"], eventName, callback) || result;\r\n        }\r\n        var doc = getDocument();\r\n        if (doc) {\r\n            result = EventHelper.Attach(doc, eventName, callback) || result;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less)\r\n     * https://caniuse.com/#search=Date.now\r\n     */\r\n    CoreUtils.dateNow = function () {\r\n        var dt = Date;\r\n        if (dt.now) {\r\n            return dt.now();\r\n        }\r\n        return new dt().getTime();\r\n    };\r\n    /**\r\n     * Return the current value of the Performance Api now() function (if available) and fallback to CoreUtils.dateNow() if it is unavailable (IE9 or less)\r\n     * https://caniuse.com/#search=performance.now\r\n     */\r\n    CoreUtils.perfNow = function () {\r\n        var perf = getPerformance();\r\n        if (perf && perf.now) {\r\n            return perf.now();\r\n        }\r\n        return CoreUtils.dateNow();\r\n    };\r\n    /**\r\n     * Generate random base64 id string.\r\n     * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n     * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n     */\r\n    CoreUtils.newId = function (maxLength) {\r\n        if (maxLength === void 0) { maxLength = 22; }\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        // Start with an initial random number, consuming the value in reverse byte order\r\n        var number = CoreUtils.random32() >>> 0; // Make sure it's a +ve number\r\n        var chars = 0;\r\n        var result = \"\";\r\n        while (result.length < maxLength) {\r\n            chars++;\r\n            result += base64chars.charAt(number & 0x3F);\r\n            number >>>= 6; // Zero fill with right shift\r\n            if (chars === 5) {\r\n                // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n                // So add on another 30 bits and make sure it's +ve\r\n                number = (((CoreUtils.random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n                chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Identifies whether the current environment appears to be IE\r\n     */\r\n    CoreUtils.isIE = function () {\r\n        if (_isTrident === null) {\r\n            var navigator_1 = getNavigator() || {};\r\n            var userAgent = (navigator_1.userAgent || \"\").toLowerCase();\r\n            _isTrident = (userAgent.indexOf(\"msie\") !== -1 || userAgent.indexOf(\"trident/\") !== -1);\r\n        }\r\n        return _isTrident;\r\n    };\r\n    /**\r\n     * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n     * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n     * @param maxValue\r\n     */\r\n    CoreUtils.randomValue = function (maxValue) {\r\n        if (maxValue > 0) {\r\n            return Math.floor((CoreUtils.random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n     * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n     */\r\n    CoreUtils.random32 = function (signed) {\r\n        var value;\r\n        var c = getCrypto() || getMsCrypto();\r\n        if (c && c.getRandomValues) {\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n        }\r\n        else if (CoreUtils.isIE()) {\r\n            // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n            if (!_mwcSeeded) {\r\n                // Set the seed for the Mwc algorithm\r\n                _autoSeedMwc();\r\n            }\r\n            // Don't use Math.random for IE\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = CoreUtils.mwcRandom32() & MaxUInt32;\r\n        }\r\n        else {\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n        }\r\n        if (!signed) {\r\n            // Make sure we end up with a positive number and not -ve one.\r\n            value >>>= 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Seed the MWC random number generator with the specified seed or a random value\r\n     * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n     */\r\n    CoreUtils.mwcRandomSeed = function (value) {\r\n        if (!value) {\r\n            _autoSeedMwc();\r\n        }\r\n        else {\r\n            _mwcSeed(value);\r\n        }\r\n    };\r\n    /**\r\n     * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n     * instead of Math.random() defaults to un-signed.\r\n     * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n     * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n     */\r\n    CoreUtils.mwcRandom32 = function (signed) {\r\n        _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n        _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n        var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n        if (!signed) {\r\n            // Make sure we end up with a positive number and not -ve one.\r\n            value >>>= 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    CoreUtils.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = CoreUtils.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (CoreUtils.random32() & 0x03) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    CoreUtils.isTypeof = _isTypeof;\r\n    CoreUtils.isUndefined = _isUndefined;\r\n    CoreUtils.isNullOrUndefined = _isNullOrUndefined;\r\n    CoreUtils.hasOwnProperty = _hasOwnProperty;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isFunction = _isFunction;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isObject = _isObject;\r\n    /**\r\n     * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n     * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object to use as a prototype. May be null\r\n     */\r\n    // tslint:disable-next-line: member-ordering\r\n    CoreUtils.objCreate = objCreateFn;\r\n    /**\r\n     * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n     * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n     * and executed in an ES3 container, providing basic IE8 compatibility.\r\n     * @param target The object on which to define the property.\r\n     * @param prop The name of the property to be defined or modified.\r\n     * @param getProp The getter function to wire against the getter.\r\n     * @param setProp The setter function to wire against the setter.\r\n     * @returns True if it was able to create the accessors otherwise false\r\n     */\r\n    CoreUtils.objDefineAccessors = objDefineAccessors;\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.Attach = _attachEvent;\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @deprecated Use {@link EventHelper#Attach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.AttachEvent = _attachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.Detach = _detachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @deprecated Use {@link EventHelper#Detach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.DetachEvent = _detachEvent;\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72,\r\n    PluginException: 73,\r\n    NotificationException: 74,\r\n    SnippetScriptLoadFailure: 99,\r\n    InvalidInstrumentationKey: 100,\r\n    CannotParseAiBlobValue: 101,\r\n    InvalidContentBlob: 102,\r\n    TrackPageActionEventFailed: 103\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","/*!\n * Microsoft Dynamic Proto Utility, 1.1.0\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Object[\"getPrototypeOf\"];\r\n/**\r\n * Internal Global used to generate a unique dynamic class name, every new class will increase this value\r\n * @ignore\r\n */\r\nvar _dynamicNames = 0;\r\n/**\r\n * Helper to check if the object contains a property of the name\r\n * @ignore\r\n */\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Object[Prototype].hasOwnProperty.call(obj, prop);\r\n}\r\n/**\r\n * Checks if the passed of value is a function.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a boolean, false otherwise.\r\n * @ignore\r\n */\r\nfunction _isFunction(value) {\r\n    return typeof value === strFunction;\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Object[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    if (target) {\r\n        // This method doesn't existing in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        // target[Constructor] May break if the constructor has been changed or removed\r\n        var newProto = target[str__Proto] || target[Prototype] || target[Constructor];\r\n        if (newProto) {\r\n            return newProto;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && _isFunction(target[funcName]) && (skipOwn || _hasOwnProperty(target, funcName)));\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throw new TypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = {};\r\n    // Save any existing instance functions\r\n    for (var name in thisTarget) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    }\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[name];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = {};\r\n    for (var name in instFuncs) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    }\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        for (var name in baseProto) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        }\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && _hasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || {};\r\n        instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !_hasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (!_isFunction(protoFunc)) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};\r\n        var instFuncs = instFuncTable[className] = (instFuncTable[className] || {}); // fetch and assign if as it may not exist yet\r\n        // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n        if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n            instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n        }\r\n        for (var name in target) {\r\n            // Only add overridden functions\r\n            if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                instFuncs[name] = target[name];\r\n                delete target[name];\r\n                // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                if (!_hasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                    proto[name] = _createDynamicPrototype(proto, name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    var thisProto = _getObjProto(thisTarget);\r\n    while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto)) {\r\n        if (thisProto === classProto) {\r\n            return true;\r\n        }\r\n        thisProto = _getObjProto(thisProto);\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (_hasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nfunction dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!_hasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] is not in class hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (_hasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _dynamicNames;\r\n        _dynamicNames++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\nvar perfDefaults = {\r\n    setInstFuncs: true,\r\n    useBaseInst: true\r\n};\r\n// And expose for testing\r\ndynamicProto[DynProtoDefaultOptions] = perfDefaults;\n\nexport default dynamicProto;\n//# sourceMappingURL=dynamicproto-js.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { hasJSON, getJSON, getConsole } from \"./EnvUtils\";\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    }\r\n    return \"\";\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self.messageId = msgId;\r\n        _self.message =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = \"\";\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : \"\");\r\n        _self.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = 'DiagnosticLogger';\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            var isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n            var isUndefined = CoreUtils.isUndefined;\r\n            var isFunction = CoreUtils.isFunction;\r\n            if (isNullOrUndefined(config)) {\r\n                config = {};\r\n            }\r\n            _self.consoleLoggingLevel = function () { return _getConfigValue('loggingLevelConsole', 0); };\r\n            _self.telemetryLoggingLevel = function () { return _getConfigValue('loggingLevelTelemetry', 1); };\r\n            _self.maxInternalMessageLimit = function () { return _getConfigValue('maxMessageLimit', 25); };\r\n            _self.enableDebugExceptions = function () { return _getConfigValue('enableDebugExceptions', false); };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The log message.\r\n             */\r\n            _self.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_self.enableDebugExceptions()) {\r\n                    throw message;\r\n                }\r\n                else {\r\n                    if (!isUndefined(message) && !!message) {\r\n                        if (!isUndefined(message.message)) {\r\n                            if (isUserAct) {\r\n                                // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                                var messageKey = +message.messageId;\r\n                                if (!_messageLogged[messageKey] && _self.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                                    _self.warnToConsole(message.message);\r\n                                    _messageLogged[messageKey] = true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                                if (_self.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                                    _self.warnToConsole(message.message);\r\n                                }\r\n                            }\r\n                            _self.logInternalMessage(severity, message);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * This will write a warning to the console if possible\r\n             * @param message {string} - The warning message\r\n             */\r\n            _self.warnToConsole = function (message) {\r\n                var theConsole = getConsole();\r\n                if (!!theConsole) {\r\n                    var logFunc = 'log';\r\n                    if (theConsole.warn) {\r\n                        logFunc = 'warn';\r\n                    }\r\n                    if (isFunction(theConsole[logFunc])) {\r\n                        theConsole[logFunc](message);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Resets the internal message count\r\n             */\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            /**\r\n             * Logs a message to the internal queue.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The message to log.\r\n             */\r\n            _self.logInternalMessage = function (severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message.messageId;\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _self.telemetryLoggingLevel()) {\r\n                        _self.queue.push(message);\r\n                        _messageCount++;\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _self.maxInternalMessageLimit()) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                        _self.queue.push(throttleMessage);\r\n                        _self.warnToConsole(throttleLimitMessage);\r\n                    }\r\n                }\r\n            };\r\n            function _getConfigValue(name, defValue) {\r\n                var value = config[name];\r\n                if (!isNullOrUndefined(value)) {\r\n                    return value;\r\n                }\r\n                return defValue;\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _self.maxInternalMessageLimit();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When this is true the SDK will throw exceptions to aid in debugging.\r\n     */\r\n    DiagnosticLogger.prototype.enableDebugExceptions = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return false;\r\n    };\r\n    /**\r\n     * 0: OFF (default)\r\n     * 1: CRITICAL\r\n     * 2: >= WARNING\r\n     */\r\n    DiagnosticLogger.prototype.consoleLoggingLevel = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    /**\r\n     * 0: OFF\r\n     * 1: CRITICAL (default)\r\n     * 2: >= WARNING\r\n     */\r\n    DiagnosticLogger.prototype.telemetryLoggingLevel = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 1;\r\n    };\r\n    /**\r\n     * The maximum number of internal messages allowed to be sent per page view\r\n     */\r\n    DiagnosticLogger.prototype.maxInternalMessageLimit = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 25;\r\n    };\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        var accessorDefined = false;\r\n        _self.start = CoreUtils.dateNow();\r\n        _self.name = name;\r\n        _self.isAsync = isAsync;\r\n        _self.isChildEvt = function () { return false; };\r\n        if (CoreUtils.isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            accessorDefined = CoreUtils.objDefineAccessors(_self, 'payload', function () {\r\n                // Delay the execution of the payloadDetails until needed\r\n                if (!theDetails_1 && CoreUtils.isFunction(payloadDetails)) {\r\n                    theDetails_1 = payloadDetails();\r\n                    // clear it out now so the referenced objects can be garbage collected\r\n                    payloadDetails = null;\r\n                }\r\n                return theDetails_1;\r\n            });\r\n        }\r\n        _self.getCtx = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey || key === PerfEvent.ChildrenContextKey) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self.setCtx = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self.isChildEvt = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent.ChildrenContextKey) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self.complete = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self.getCtx(PerfEvent.ChildrenContextKey);\r\n            if (CoreUtils.isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts.length; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt.time;\r\n                    }\r\n                }\r\n            }\r\n            _self.time = CoreUtils.dateNow() - _self.start;\r\n            _self.exTime = _self.time - childTime;\r\n            _self.complete = function () { };\r\n            if (!accessorDefined && CoreUtils.isFunction(payloadDetails)) {\r\n                // If we couldn't define the property set during complete -- to minimize the perf impact until after the time\r\n                _self.payload = payloadDetails();\r\n            }\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent.complete();\r\n                    if (manager) {\r\n                        manager.perfEvent(perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self.setCtx = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self.getCtx = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Create a new event and start timing, the manager may return null/undefined to indicate that it does not\r\n     * want to monitor this source event.\r\n     * @param src The source name of the event\r\n     * @param payloadDetails - An optional callback function to fetch the payload details for the event.\r\n     * @param isAsync - Is the event occurring from a async event\r\n     */\r\n    PerfManager.prototype.create = function (src, payload, isAsync) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    /**\r\n     * Complete the perfEvent and fire any notifications.\r\n     * @param perfEvent Fire the event which will also complete the passed event\r\n     */\r\n    PerfManager.prototype.fire = function (perfEvent) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Set an execution context value\r\n     * @param key - The context key name\r\n     * @param value - The value\r\n     */\r\n    PerfManager.prototype.setCtx = function (key, value) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Get the execution context value\r\n     * @param key - The context key\r\n     */\r\n    PerfManager.prototype.getCtx = function (key) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr && CoreUtils.isFunction(perfMgr[\"getPerfMgr\"])) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[\"getPerfMgr\"]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr.getCtx(doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt.setCtx) {\r\n                        perfEvt.setCtx(PerfEvent.ParentContextKey, currentActive);\r\n                        if (currentActive.getCtx && currentActive.setCtx) {\r\n                            var children = currentActive.getCtx(PerfEvent.ChildrenContextKey);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive.setCtx(PerfEvent.ChildrenContextKey, children);\r\n                            }\r\n                            children.push(perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr.setCtx(doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt.setCtx) {\r\n                    perfEvt.setCtx(\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr.setCtx(doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { LoggingSeverity, _InternalMessageId } from '../JavaScriptSDK.Enums/LoggingEnums';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar TelemetryPluginChain = /** @class */ (function () {\r\n    function TelemetryPluginChain(plugin, defItemCtx) {\r\n        var _self = this;\r\n        var _nextProxy = null;\r\n        var _hasProcessTelemetry = _isFunction(plugin.processTelemetry);\r\n        var _hasSetNext = _isFunction(plugin.setNextPlugin);\r\n        _self._hasRun = false;\r\n        _self.getPlugin = function () {\r\n            return plugin;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processTelemetry = function (env, itemCtx) {\r\n            if (!itemCtx) {\r\n                // Looks like a plugin didn't pass the (optional) context, so restore to the default\r\n                itemCtx = defItemCtx;\r\n            }\r\n            var identifier = plugin ? plugin.identifier : \"TelemetryPluginChain\";\r\n            doPerf(itemCtx ? itemCtx.core() : null, function () { return identifier + \":processTelemetry\"; }, function () {\r\n                if (plugin && _hasProcessTelemetry) {\r\n                    _self._hasRun = true;\r\n                    try {\r\n                        // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n                        // doesn't calls processTelemetry() instead of itemContext.processNext() or some \r\n                        // other form of error occurred\r\n                        itemCtx.setNext(_nextProxy);\r\n                        if (_hasSetNext) {\r\n                            // Backward compatibility setting the next plugin on the instance\r\n                            plugin.setNextPlugin(_nextProxy);\r\n                        }\r\n                        // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                        _nextProxy && (_nextProxy._hasRun = false);\r\n                        plugin.processTelemetry(env, itemCtx);\r\n                    }\r\n                    catch (error) {\r\n                        var hasRun = _nextProxy && _nextProxy._hasRun;\r\n                        if (!_nextProxy || !hasRun) {\r\n                            // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                            // Which means the current one is the root of the failure so log/report this failure\r\n                            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.PluginException, \"Plugin [\" + plugin.identifier + \"] failed during processTelemetry - \" + error);\r\n                        }\r\n                        if (_nextProxy && !hasRun) {\r\n                            // As part of the failure the current plugin did not attempt to call the next plugin in the cahin\r\n                            // So rather than leave the pipeline dead in the water we call the next plugin\r\n                            _nextProxy.processTelemetry(env, itemCtx);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_nextProxy) {\r\n                    _self._hasRun = true;\r\n                    // The underlying plugin is either not defined or does not have a processTelemetry implementation\r\n                    // so we still want the next plugin to be executed.\r\n                    _nextProxy.processTelemetry(env, itemCtx);\r\n                }\r\n            }, function () { return ({ item: env }); }, !(env.sync));\r\n        };\r\n    }\r\n    return TelemetryPluginChain;\r\n}());\r\nexport { TelemetryPluginChain };\r\n//# sourceMappingURL=TelemetryPluginChain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { TelemetryPluginChain } from \"./TelemetryPluginChain\";\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n/**\r\n * Creates the instance execution chain for the plugins\r\n */\r\nfunction _createProxyChain(plugins, itemCtx) {\r\n    var proxies = [];\r\n    if (plugins && plugins.length > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy = null;\r\n        for (var idx = 0; idx < plugins.length; idx++) {\r\n            var thePlugin = plugins[idx];\r\n            if (thePlugin && CoreUtils.isFunction(thePlugin.processTelemetry)) {\r\n                // Only add plugins that are processors\r\n                var newProxy = new TelemetryPluginChain(thePlugin, itemCtx);\r\n                proxies.push(newProxy);\r\n                if (lastProxy) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy.setNext(newProxy);\r\n                }\r\n                lastProxy = newProxy;\r\n            }\r\n        }\r\n    }\r\n    return proxies.length > 0 ? proxies[0] : null;\r\n}\r\nfunction _copyProxyChain(proxy, itemCtx, startAt) {\r\n    var plugins = [];\r\n    var add = startAt ? false : true;\r\n    if (proxy) {\r\n        while (proxy) {\r\n            var thePlugin = proxy.getPlugin();\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    if (!add) {\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nfunction _copyPluginChain(srcPlugins, itemCtx, startAt) {\r\n    var plugins = srcPlugins;\r\n    var add = false;\r\n    if (startAt && srcPlugins) {\r\n        plugins = [];\r\n        CoreUtils.arrForEach(srcPlugins, function (thePlugin) {\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !add) {\r\n        if (!plugins) {\r\n            plugins = [];\r\n        }\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(plugins, config, core, startAt) {\r\n        var _self = this;\r\n        var _nextProxy = null; // Null == No next plugin\r\n        // There is no next element (null) vs not defined (undefined)\r\n        if (startAt !== null) {\r\n            if (plugins && CoreUtils.isFunction(plugins.getPlugin)) {\r\n                // We have a proxy chain object\r\n                _nextProxy = _copyProxyChain(plugins, _self, startAt || plugins.getPlugin());\r\n            }\r\n            else {\r\n                // We just have an array\r\n                if (startAt) {\r\n                    _nextProxy = _copyPluginChain(plugins, _self, startAt);\r\n                }\r\n                else if (CoreUtils.isUndefined(startAt)) {\r\n                    // Undefined means copy the existing chain\r\n                    _nextProxy = _createProxyChain(plugins, _self);\r\n                }\r\n            }\r\n        }\r\n        _self.core = function () {\r\n            return core;\r\n        };\r\n        _self.diagLog = function () {\r\n            var logger = (core || {}).logger;\r\n            if (!logger) {\r\n                // Fallback so we always have a logger\r\n                logger = new DiagnosticLogger(config || {});\r\n            }\r\n            return logger;\r\n        };\r\n        _self.getCfg = function () {\r\n            return config;\r\n        };\r\n        _self.getExtCfg = function (identifier, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = {}; }\r\n            var theConfig;\r\n            if (config) {\r\n                var extConfig = config.extensionConfig;\r\n                if (extConfig && identifier) {\r\n                    theConfig = extConfig[identifier];\r\n                }\r\n            }\r\n            return (theConfig ? theConfig : defaultValue);\r\n        };\r\n        _self.getConfig = function (identifier, field, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            var theValue;\r\n            var extConfig = _self.getExtCfg(identifier, null);\r\n            if (extConfig && !_isNullOrUndefined(extConfig[field])) {\r\n                theValue = extConfig[field];\r\n            }\r\n            else if (config && !_isNullOrUndefined(config[field])) {\r\n                theValue = config[field];\r\n            }\r\n            return !_isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n        };\r\n        _self.hasNext = function () {\r\n            return _nextProxy != null;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processNext = function (env) {\r\n            var nextPlugin = _nextProxy;\r\n            if (nextPlugin) {\r\n                // Automatically move to the next plugin\r\n                _nextProxy = nextPlugin.getNext();\r\n                nextPlugin.processTelemetry(env, _self);\r\n            }\r\n        };\r\n        _self.createNew = function (plugins, startAt) {\r\n            if (plugins === void 0) { plugins = null; }\r\n            return new ProcessTelemetryContext(plugins || _nextProxy, config, core, startAt);\r\n        };\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar getPlugin = \"getPlugin\";\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this;\r\n        var _isinitialized = false;\r\n        var _rootCtx = null; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin = null; // Used for backward compatibility where plugins don't call the main pipeline\r\n        _self.core = null;\r\n        _self.diagLog = function (itemCtx) {\r\n            return _self._getTelCtx(itemCtx).diagLog();\r\n        };\r\n        _self.isInitialized = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self.setNextPlugin = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self.processNext = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx.processNext(env);\r\n            }\r\n            else if (_nextPlugin && _isFunction(_nextPlugin.processTelemetry)) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks \r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin.processTelemetry(env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = function (currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || new ProcessTelemetryContext(null, {}, _self.core);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin[getPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        };\r\n        _self._baseTelInit = function (config, core, extensions, pluginChain) {\r\n            if (config) {\r\n                // Make sure the extensionConfig exists\r\n                config.extensionConfig = config.extensionConfig || [];\r\n            }\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core.getProcessTelContext().getNext();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[getPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self.core = core;\r\n            _rootCtx = new ProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n            _isinitialized = true;\r\n        };\r\n    }\r\n    BaseTelemetryPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        this._baseTelInit(config, core, extensions, pluginChain);\r\n    };\r\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar processTelemetry = \"processTelemetry\";\r\nvar priority = \"priority\";\r\nvar setNextPlugin = \"setNextPlugin\";\r\nvar isInitialized = \"isInitialized\";\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config The current config for the instance\r\n * @param core THe current core instance\r\n * @param extensions The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext.getNext();\r\n    while (proxy) {\r\n        var thePlugin = proxy.getPlugin();\r\n        if (thePlugin) {\r\n            if (lastPlugin &&\r\n                _isFunction(lastPlugin[setNextPlugin]) &&\r\n                _isFunction(thePlugin[processTelemetry])) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[setNextPlugin](thePlugin);\r\n            }\r\n            if (!_isFunction(thePlugin[isInitialized]) || !thePlugin[isInitialized]()) {\r\n                initPlugins.push(thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    // Now initiatilize the plugins\r\n    CoreUtils.arrForEach(initPlugins, function (thePlugin) {\r\n        thePlugin.initialize(processContext.getCfg(), processContext.core(), extensions, processContext.getNext());\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        var bHasProcess = _isFunction(extB[processTelemetry]);\r\n        if (_isFunction(extA[processTelemetry])) {\r\n            result = bHasProcess ? extA[priority] - extB[priority] : 1;\r\n        }\r\n        else if (bHasProcess) {\r\n            result = -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete    \r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { BaseTelemetryPlugin } from './BaseTelemetryPlugin';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins } from './TelemetryHelpers';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar _objDefineAccessors = CoreUtils.objDefineAccessors;\r\nvar ChannelController = /** @class */ (function (_super) {\r\n    __extends(ChannelController, _super);\r\n    function ChannelController() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"ChannelControllerPlugin\";\r\n        _this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n        var _arrForEach = CoreUtils.arrForEach;\r\n        var _channelQueue;\r\n        dynamicProto(ChannelController, _this, function (_self, _base) {\r\n            _self.setNextPlugin = function (next) {\r\n                // The Channel controller is last in pipeline\r\n            };\r\n            _self.processTelemetry = function (item, itemCtx) {\r\n                if (_channelQueue) {\r\n                    _arrForEach(_channelQueue, function (queues) {\r\n                        // pass on to first item in queue\r\n                        if (queues.length > 0) {\r\n                            // Copying the item context as we could have mutiple chains that are executing asynchronously\r\n                            // and calling _getDefTelCtx as it's possible that the caller doesn't pass any context\r\n                            var chainCtx = _this._getTelCtx(itemCtx).createNew(queues);\r\n                            chainCtx.processNext(item);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            _self.getChannelControls = function () {\r\n                return _channelQueue;\r\n            };\r\n            _self.initialize = function (config, core, extensions) {\r\n                if (_self.isInitialized()) {\r\n                    // already initialized\r\n                    return;\r\n                }\r\n                _base.initialize(config, core, extensions);\r\n                if (config.isCookieUseDisabled) {\r\n                    CoreUtils.disableCookies();\r\n                }\r\n                _createChannelQueues((config || {}).channels, extensions);\r\n                // Initialize the Queues\r\n                _arrForEach(_channelQueue, function (queue) { return initializePlugins(new ProcessTelemetryContext(queue, config, core), extensions); });\r\n            };\r\n        });\r\n        function _checkQueuePriority(queue) {\r\n            _arrForEach(queue, function (queueItem) {\r\n                if (queueItem.priority < ChannelControllerPriority) {\r\n                    throw Error(ChannelValidationMessage + queueItem.identifier);\r\n                }\r\n            });\r\n        }\r\n        function _addChannelQueue(queue) {\r\n            if (queue && queue.length > 0) {\r\n                queue = queue.sort(function (a, b) {\r\n                    return a.priority - b.priority;\r\n                });\r\n                _checkQueuePriority(queue);\r\n                _channelQueue.push(queue);\r\n            }\r\n        }\r\n        function _createChannelQueues(channels, extensions) {\r\n            _channelQueue = [];\r\n            if (channels) {\r\n                // Add and sort the configuration channel queues\r\n                _arrForEach(channels, function (queue) { return _addChannelQueue(queue); });\r\n            }\r\n            if (extensions) {\r\n                // Create a new channel queue for any extensions with a priority > the ChannelControllerPriority\r\n                var extensionQueue_1 = [];\r\n                _arrForEach(extensions, function (plugin) {\r\n                    if (plugin.priority > ChannelControllerPriority) {\r\n                        extensionQueue_1.push(plugin);\r\n                    }\r\n                });\r\n                _addChannelQueue(extensionQueue_1);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item, itemCtx) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ;\r\n    ChannelController.prototype.getChannelControls = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    // tslint:disable-next-line\r\n    ChannelController._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        _objDefineAccessors(ChannelController.prototype, \"ChannelControls\", ChannelController.prototype.getChannelControls);\r\n        _objDefineAccessors(ChannelController.prototype, \"channelQueue\", ChannelController.prototype.getChannelControls);\r\n    })();\r\n    return ChannelController;\r\n}(BaseTelemetryPlugin));\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ChannelController } from './ChannelController';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins, sortPlugins } from './TelemetryHelpers';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nimport { PerfManager } from \"./PerfManager\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar _arrForEach = CoreUtils.arrForEach;\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        var _isInitialized = false;\r\n        var _eventQueue;\r\n        var _channelController;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        dynamicProto(BaseCore, this, function (_self) {\r\n            _self._extensions = new Array();\r\n            _channelController = new ChannelController();\r\n            _self.logger = CoreUtils.objCreate({\r\n                throwInternal: function (severity, msgId, msg, properties, isUserAct) {\r\n                    if (isUserAct === void 0) { isUserAct = false; }\r\n                },\r\n                warnToConsole: function (message) { },\r\n                resetInternalMessageCount: function () { }\r\n            });\r\n            _eventQueue = [];\r\n            _self.isInitialized = function () { return _isInitialized; };\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                // Make sure core is only initialized once\r\n                if (_self.isInitialized()) {\r\n                    throw Error(\"Core should not be initialized more than once\");\r\n                }\r\n                if (!config || _isNullOrUndefined(config.instrumentationKey)) {\r\n                    throw Error(\"Please provide instrumentation key\");\r\n                }\r\n                _notificationManager = notificationManager;\r\n                // For backward compatibility only\r\n                _self[strNotificationManager] = notificationManager;\r\n                _self.config = config || {};\r\n                config.extensions = _isNullOrUndefined(config.extensions) ? [] : config.extensions;\r\n                // add notification to the extensions in the config so other plugins can access it\r\n                var extConfig = config.extensionConfig = _isNullOrUndefined(config.extensionConfig) ? {} : config.extensionConfig;\r\n                extConfig.NotificationManager = notificationManager;\r\n                if (logger) {\r\n                    _self.logger = logger;\r\n                }\r\n                // Concat all available extensions\r\n                var allExtensions = [];\r\n                allExtensions.push.apply(allExtensions, extensions.concat(config.extensions));\r\n                allExtensions = sortPlugins(allExtensions);\r\n                var coreExtensions = [];\r\n                var channelExtensions = [];\r\n                // Check if any two extensions have the same priority, then warn to console\r\n                // And extract the local extensions from the \r\n                var extPriorities = {};\r\n                // Extension validation\r\n                _arrForEach(allExtensions, function (ext) {\r\n                    if (_isNullOrUndefined(ext) || _isNullOrUndefined(ext.initialize)) {\r\n                        throw Error(validationError);\r\n                    }\r\n                    var extPriority = ext.priority;\r\n                    var identifier = ext.identifier;\r\n                    if (ext && extPriority) {\r\n                        if (!_isNullOrUndefined(extPriorities[extPriority])) {\r\n                            logger.warnToConsole(\"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n                        }\r\n                        else {\r\n                            // set a value\r\n                            extPriorities[extPriority] = identifier;\r\n                        }\r\n                    }\r\n                    // Split extensions to core and channelController\r\n                    if (!extPriority || extPriority < _channelController.priority) {\r\n                        // Add to core extension that will be managed by BaseCore\r\n                        coreExtensions.push(ext);\r\n                    }\r\n                    else {\r\n                        // Add all other extensions to be managed by the channel controller\r\n                        channelExtensions.push(ext);\r\n                    }\r\n                });\r\n                // Validation complete\r\n                // Add the channelController to the complete extension collection and\r\n                // to the end of the core extensions\r\n                allExtensions.push(_channelController);\r\n                coreExtensions.push(_channelController);\r\n                // Sort the complete set of extensions by priority\r\n                allExtensions = sortPlugins(allExtensions);\r\n                _self._extensions = allExtensions;\r\n                // initialize channel controller first, this will initialize all channel plugins\r\n                initializePlugins(new ProcessTelemetryContext([_channelController], config, _self), allExtensions);\r\n                initializePlugins(new ProcessTelemetryContext(coreExtensions, config, _self), allExtensions);\r\n                // Now reset the extensions to just those being managed by Basecore\r\n                _self._extensions = coreExtensions;\r\n                if (_self.getTransmissionControls().length === 0) {\r\n                    throw new Error(\"No channels available\");\r\n                }\r\n                _isInitialized = true;\r\n                _self.releaseQueue();\r\n            };\r\n            _self.getTransmissionControls = function () {\r\n                return _channelController.getChannelControls();\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                if (!telemetryItem.iKey) {\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem.iKey = _self.config.instrumentationKey;\r\n                }\r\n                if (!telemetryItem.time) {\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem.time = CoreUtils.toISOString(new Date());\r\n                }\r\n                if (_isNullOrUndefined(telemetryItem.ver)) {\r\n                    // CommonSchema 4.0\r\n                    telemetryItem.ver = \"4.0\";\r\n                }\r\n                if (_self.isInitialized()) {\r\n                    // Process the telemetry plugin chain\r\n                    _self.getProcessTelContext().processNext(telemetryItem);\r\n                }\r\n                else {\r\n                    // Queue events until all extensions are initialized\r\n                    _eventQueue.push(telemetryItem);\r\n                }\r\n            };\r\n            _self.getProcessTelContext = function () {\r\n                var extensions = _self._extensions;\r\n                var thePlugins = extensions;\r\n                // invoke any common telemetry processors before sending through pipeline\r\n                if (!extensions || extensions.length === 0) {\r\n                    // Pass to Channel controller so data is sent to correct channel queues\r\n                    thePlugins = [_channelController];\r\n                }\r\n                return new ProcessTelemetryContext(thePlugins, _self.config, _self);\r\n            };\r\n            _self.getNotifyMgr = function () {\r\n                if (!_notificationManager) {\r\n                    // Create Dummy notification manager\r\n                    _notificationManager = CoreUtils.objCreate({\r\n                        addNotificationListener: function (listener) { },\r\n                        removeNotificationListener: function (listener) { },\r\n                        eventsSent: function (events) { },\r\n                        eventsDiscarded: function (events, reason) { },\r\n                        eventsSendRequest: function (sendReason, isAsync) { }\r\n                    });\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            _self.getPerfMgr = function () {\r\n                if (!_perfManager) {\r\n                    if (_self.config && _self.config.enablePerfMgr) {\r\n                        _perfManager = new PerfManager(_self.getNotifyMgr());\r\n                    }\r\n                }\r\n                return _perfManager;\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue.length;\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_eventQueue.length > 0) {\r\n                    _arrForEach(_eventQueue, function (event) {\r\n                        _self.getProcessTelContext().processNext(event);\r\n                    });\r\n                    _eventQueue = [];\r\n                }\r\n            };\r\n        });\r\n    }\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.getTransmissionControls = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.track = function (telemetryItem) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.getProcessTelContext = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.getNotifyMgr = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.getPerfMgr = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.setPerfMgr = function (perfMgr) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.eventCnt = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    BaseCore.prototype.releaseQueue = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","import { CoreUtils, } from \"./CoreUtils\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var arrForEach = CoreUtils.arrForEach;\r\n        var perfEvtsSendAll = !!(config || {}).perfEvtsSendAll;\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            _self.addNotificationListener = function (listener) {\r\n                _self.listeners.push(listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n             */\r\n            _self.removeNotificationListener = function (listener) {\r\n                var index = CoreUtils.arrIndexOf(_self.listeners, listener);\r\n                while (index > -1) {\r\n                    _self.listeners.splice(index, 1);\r\n                    index = CoreUtils.arrIndexOf(_self.listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n             */\r\n            _self.eventsSent = function (events) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsSent) {\r\n                        setTimeout(function () { return listener.eventsSent(events); }, 0);\r\n                    }\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n             * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self.eventsDiscarded = function (events, reason) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsDiscarded) {\r\n                        setTimeout(function () { return listener.eventsDiscarded(events, reason); }, 0);\r\n                    }\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param {number} sendReason - The reason why the event batch is being sent.\r\n             * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self.eventsSendRequest = function (sendReason, isAsync) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsSendRequest) {\r\n                        if (isAsync) {\r\n                            setTimeout(function () { return listener.eventsSendRequest(sendReason, isAsync); }, 0);\r\n                        }\r\n                        else {\r\n                            try {\r\n                                listener.eventsSendRequest(sendReason, isAsync);\r\n                            }\r\n                            catch (e) {\r\n                                // Catch errors to ensure we don't block sending the requests\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            _self.perfEvent = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent.isChildEvt()) {\r\n                        arrForEach(_self.listeners, function (listener) {\r\n                            if (listener && listener.perfEvent) {\r\n                                if (perfEvent.isAsync) {\r\n                                    setTimeout(function () { return listener.perfEvent(perfEvent); }, 0);\r\n                                }\r\n                                else {\r\n                                    try {\r\n                                        listener.perfEvent(perfEvent);\r\n                                    }\r\n                                    catch (e) {\r\n                                        // Catch errors to ensure we don't block sending the requests\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * [Optional] A function called when the events have been requested to be sent to the sever.\r\n     * @param {number} sendReason - The reason why the event batch is being sent.\r\n     * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n     */\r\n    NotificationManager.prototype.eventsSendRequest = function (sendReason, isAsync) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","import { BaseCore } from './BaseCore';\r\nimport { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                _base.initialize(config, extensions, logger || new DiagnosticLogger(config), notificationManager || new NotificationManager(config));\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self.getPerfMgr(), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throw Error(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    _validateTelemetryItem(telemetryItem);\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param {INotificationListener} listener - An INotificationListener object.\r\n             */\r\n            _self.addNotificationListener = function (listener) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.addNotificationListener(listener);\r\n                }\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - INotificationListener to remove.\r\n             */\r\n            _self.removeNotificationListener = function (listener) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.removeNotificationListener(listener);\r\n                }\r\n            };\r\n            /**\r\n             * Periodically check logger.queue for\r\n             */\r\n            _self.pollInternalLogs = function (eventName) {\r\n                var interval = _self.config.diagnosticLogInterval;\r\n                if (!interval || !(interval > 0)) {\r\n                    interval = 10000;\r\n                }\r\n                return setInterval(function () {\r\n                    var queue = _self.logger ? _self.logger.queue : [];\r\n                    CoreUtils.arrForEach(queue, function (logMessage) {\r\n                        var item = {\r\n                            name: eventName ? eventName : \"InternalMessageId: \" + logMessage.messageId,\r\n                            iKey: _self.config.instrumentationKey,\r\n                            time: CoreUtils.toISOString(new Date()),\r\n                            baseType: _InternalLogMessage.dataType,\r\n                            baseData: { message: logMessage.message }\r\n                        };\r\n                        _self.track(item);\r\n                    });\r\n                    queue.length = 0;\r\n                }, interval);\r\n            };\r\n            function _validateTelemetryItem(telemetryItem) {\r\n                if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n                    _notifyInvalidEvent(telemetryItem);\r\n                    throw Error(\"telemetry name required\");\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    return AppInsightsCore;\r\n}(BaseCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId, CoreUtils, hasJSON, getJSON, objForEachKey } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps_1 = {};\r\n            objForEachKey(properties, function (prop, value) {\r\n                if (CoreUtils.isObject(value) && hasJSON()) {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = getJSON().stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n                tempProps_1[prop] = value;\r\n            });\r\n            properties = tempProps_1;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements_1 = {};\r\n            objForEachKey(measurements, function (measure, value) {\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n                tempMeasurements_1[measure] = value;\r\n            });\r\n            measurements = tempMeasurements_1;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (!CoreUtils.isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, EventHelper, _InternalMessageId, LoggingSeverity, getGlobal, getGlobalInst, getWindow, getDocument, getNavigator, getPerformance, getLocation, hasJSON, getJSON, strPrototype, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar _navigator = getNavigator();\r\nvar _isString = CoreUtils.isString;\r\nvar _uaDisallowsSameSiteNone = null;\r\nfunction _endsWith(value, search) {\r\n    var len = value.length;\r\n    var start = len - search.length;\r\n    return value.substring(start >= 0 ? start : 0, len) === search;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (CoreUtils.isFunction(Event)) {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            var doc = getDocument();\r\n            if (doc && doc.createEvent) {\r\n                event = doc.createEvent(\"Event\");\r\n                event.initEvent(eventName, true, true);\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (CoreUtils.isNullOrUndefined(getGlobal())) {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? getGlobalInst(\"localStorage\") : getGlobalInst(\"sessionStorage\");\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n                keys.push(key);\r\n            });\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    Util.disallowsSameSiteNone = function (userAgent) {\r\n        if (!_isString(userAgent)) {\r\n            return false;\r\n        }\r\n        // Cover all iOS based browsers here. This includes:\r\n        // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n        // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n        if (userAgent.indexOf(\"CPU iPhone OS 12\") !== -1 || userAgent.indexOf(\"iPad; CPU OS 12\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n        // - Safari on Mac OS X\r\n        // This does not include:\r\n        // - Internal browser on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && userAgent.indexOf(\"Version/\") !== -1 && userAgent.indexOf(\"Safari\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n        // - Internal browser on Mac OS X\r\n        // This does not include:\r\n        // - Safari on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && _endsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n            return true;\r\n        }\r\n        // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n        // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n        // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n        if (userAgent.indexOf(\"Chrome/5\") !== -1 || userAgent.indexOf(\"Chrome/6\") !== -1) {\r\n            return true;\r\n        }\r\n        // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n        // that don't specify their Chrome version as lacking support for SameSite=None.\r\n        if (userAgent.indexOf(\"UnrealEngine\") !== -1 && userAgent.indexOf(\"Chrome\") === -1) {\r\n            return true;\r\n        }\r\n        // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n        // NB: this rule isn't complete - you need regex to make a complete rule.\r\n        // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n        if (userAgent.indexOf(\"UCBrowser/12\") !== -1 || userAgent.indexOf(\"UCBrowser/11\") !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        if (Util.canUseCookies(logger)) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            var location_1 = getLocation();\r\n            if (location_1 && location_1.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n                if (_uaDisallowsSameSiteNone === null) {\r\n                    _uaDisallowsSameSiteNone = Util.disallowsSameSiteNone((getNavigator() || {}).userAgent);\r\n                }\r\n                if (!_uaDisallowsSameSiteNone) {\r\n                    value = value + \";SameSite=None\"; // SameSite can only be set on secure pages\r\n                }\r\n            }\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return CoreUtils.random32(true);\r\n    };\r\n    /**\r\n     * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : (_navigator ? (_navigator.userAgent || \"\").toLowerCase() : \"\");\r\n        if (myNav.indexOf(\"msie\") !== -1) {\r\n            return parseInt(myNav.split(\"msie\")[1]);\r\n        }\r\n        else if (myNav.indexOf(\"trident/\")) {\r\n            var tridentVer = parseInt(myNav.split(\"trident/\")[1]);\r\n            if (tridentVer) {\r\n                return tridentVer + 4;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        var propertyValueDump = \"\";\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        else if (hasJSON()) {\r\n            propertyValueDump = getJSON().stringify(object);\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event to the window\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        return EventHelper.Attach(getWindow(), eventName, callback);\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in _navigator && _navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = getDocument() || {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = CoreUtils.strTrim;\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = CoreUtils.newId;\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = CoreUtils.generateW3CId;\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = CoreUtils.isArray;\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = CoreUtils.isError;\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = CoreUtils.isDate;\r\n    // Keeping this name for backward compatibility (for now)\r\n    Util.toISOStringForIE8 = CoreUtils.toISOString;\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        var anchorIdx = UrlHelper._htmlAnchorIdx;\r\n        var anchorCache = UrlHelper._htmlAnchorElement;\r\n        var tempAnchor = anchorCache[anchorIdx];\r\n        if (!UrlHelper.document.createElement) {\r\n            // Always create the temp instance if createElement is not available\r\n            tempAnchor = { host: UrlHelper.parseHost(url, true) };\r\n        }\r\n        else if (!anchorCache[anchorIdx]) {\r\n            // Create and cache the unattached anchor instance \r\n            tempAnchor = anchorCache[anchorIdx] = UrlHelper.document.createElement('a');\r\n        }\r\n        tempAnchor.href = url;\r\n        // Move the cache index forward\r\n        anchorIdx++;\r\n        if (anchorIdx >= anchorCache.length) {\r\n            anchorIdx = 0;\r\n        }\r\n        UrlHelper._htmlAnchorIdx = anchorIdx;\r\n        return tempAnchor;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url, inclPort) {\r\n        var fullHost = UrlHelper.parseFullHost(url, inclPort);\r\n        if (fullHost) {\r\n            var match = fullHost.match(/(www[0-9]?\\.)?(.[^/:]+)(\\:[\\d]+)?/i);\r\n            if (match != null && match.length > 3 && _isString(match[2]) && match[2].length > 0) {\r\n                return match[2] + (match[3] || \"\");\r\n            }\r\n        }\r\n        return fullHost;\r\n    };\r\n    /**\r\n     * Get the full host from the url, optionally including the port\r\n     */\r\n    UrlHelper.parseFullHost = function (url, inclPort) {\r\n        var result = null;\r\n        if (url) {\r\n            var match = url.match(/(\\w*):\\/\\/(.[^/:]+)(\\:[\\d]+)?/i);\r\n            if (match != null && match.length > 2 && _isString(match[2]) && match[2].length > 0) {\r\n                result = match[2] || \"\";\r\n                if (inclPort && match.length > 2) {\r\n                    var protocol = (match[1] || \"\").toLowerCase();\r\n                    var port = match[3] || \"\";\r\n                    // IE includes the standard port so pass it off if it's the same as the protocol\r\n                    if (protocol === \"http\" && port === \":80\") {\r\n                        port = \"\";\r\n                    }\r\n                    else if (protocol === \"https\" && port === \":443\") {\r\n                        port = \"\";\r\n                    }\r\n                    result += port;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.document = getDocument() || {};\r\n    UrlHelper._htmlAnchorIdx = 0;\r\n    // Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n    // Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\n    UrlHelper._htmlAnchorElement = [null, null, null, null, null];\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n     * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n     * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n     * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n     * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n            return false;\r\n        }\r\n        if (config && config.correlationHeaderExcludePatterns) {\r\n            for (var i = 0; i < config.correlationHeaderExcludePatterns.length; i++) {\r\n                if (config.correlationHeaderExcludePatterns[i].test(requestUrl)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if (requestHost && (requestHost.indexOf(\":443\") !== -1 || requestHost.indexOf(\":80\") !== -1)) {\r\n            // [Bug #1260] IE can include the port even for http and https URLs so if present \r\n            // try and parse it to remove if it matches the default protocol port\r\n            requestHost = (UrlHelper.parseFullHost(requestUrl, true) || \"\").toLowerCase();\r\n        }\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            CoreUtils.arrForEach(includedDomains, function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n        // Previously we always returned false for a falsy requestHost\r\n        return requestHost && requestHost.length > 0;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = function () {\r\n        // returns the window or webworker performance object\r\n        var perf = getPerformance();\r\n        if (perf && perf.now && perf.timing) {\r\n            var now = perf.now() + perf.timing.navigationStart;\r\n            // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n            if (now > 0) {\r\n                return now;\r\n            }\r\n        }\r\n        return new Date().getTime();\r\n    };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    __extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = CoreUtils.toISOString(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    __extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    __extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    __extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    __extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar strError = \"error\";\r\nfunction _isExceptionDetailsInternal(value) {\r\n    return \"hasFullStack\" in value && \"typeName\" in value;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType.name || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor.toString());\r\n                typeName = (results && results.length > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // Ignore\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\nvar Exception = /** @class */ (function (_super) {\r\n    __extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (!_isExceptionInternal(exception)) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties) || {};\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception.exceptions\r\n            && CoreUtils.arrMap(exception.exceptions, function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign({}, exception, { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && CoreUtils.arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    __extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            if (!Util.isError(error)) {\r\n                error = error[strError] || error.evt || error;\r\n            }\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, _getErrorType(error)) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(this.parsedStack, function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(exception.parsedStack, function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (CoreUtils.isString(stack)) {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    __extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        // Not converting this to CoreUtils.isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    __extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    __extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    __extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    __extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    __extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    __extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    __extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    __extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    __extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    __extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n        this.internalSnippet = \"ai.internal.snippet\";\r\n        this.internalSdkSrc = \"ai.internal.sdkSrc\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n        // the number to be incorrect.\r\n        var now = new Date().getTime();\r\n        var acquisitionExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has elapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate === 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = new Date().getTime();\r\n        this.automaticSession.id = Util.newId((this.config && this.config.idLength) ? this.config.idLength() : 22);\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n        // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.  \r\n        // Another browser instance does not inherit this cookie.\r\n        var UTCString = this.config.sessionExpirationMs() === 0 ? '0' : cookieExpiry.toUTCString();\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + UTCString, cookieDomain);\r\n        this.cookieUpdatedTimestamp = new Date().getTime();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.5.11\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this.isNewUser = false;\r\n        this._logger = logger;\r\n        // get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            this.isNewUser = false;\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = CoreUtils.newId(config && config.idLength ? config.idLength() : 22);\r\n            var date = new Date();\r\n            var acqStr = CoreUtils.toISOString(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            this.isNewUser = true;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the authenticated user id and the account id in this session.\r\n     *\r\n     * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n     * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n     */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DataSanitizer } from '@microsoft/applicationinsights-common';\r\nimport { getLocation } from '@microsoft/applicationinsights-core-js';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        this.traceID = id || Util.generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            this.name = location.pathname;\r\n        }\r\n        this.name = DataSanitizer.sanitizeString(logger, this.name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils, hasWindow, _InternalLogMessage } from '@microsoft/applicationinsights-core-js';\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys, PageView } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        var _self = this;\r\n        _self.application = new Application();\r\n        _self.internal = new Internal(defaultConfig);\r\n        if (hasWindow()) {\r\n            _self.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            _self.device = new Device();\r\n            _self.location = new Location();\r\n            _self.user = new User(defaultConfig, logger);\r\n            _self.telemetryTrace = new TelemetryTrace(undefined, undefined, undefined, logger);\r\n            _self.session = new Session();\r\n        }\r\n        _self.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event, itemCtx) {\r\n        var session = this.session;\r\n        var sessionManager = this.sessionManager;\r\n        var sessionContext = session || (sessionManager && sessionManager.automaticSession);\r\n        if (sessionContext) {\r\n            if (CoreUtils.isString(sessionContext.id)) {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (CoreUtils.isString(session.id)) {\r\n                event.ext.app.sesId = session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event, itemCtx) {\r\n        var os = this.os;\r\n        if (os && os.name) {\r\n            event.ext.os = os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event, itemCtx) {\r\n        var application = this.application;\r\n        if (application) {\r\n            if (CoreUtils.isString(application.ver)) {\r\n                event.tags[CtxTagKeys.applicationVersion] = application.ver;\r\n            }\r\n            if (CoreUtils.isString(application.build)) {\r\n                event.tags[CtxTagKeys.applicationBuild] = application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event, itemCtx) {\r\n        var device = this.device;\r\n        if (device) {\r\n            if (CoreUtils.isString(device.id)) {\r\n                event.ext.device.localId = device.id;\r\n            }\r\n            if (CoreUtils.isString(device.ip)) {\r\n                event.ext.device.ip = device.ip;\r\n            }\r\n            if (CoreUtils.isString(device.model)) {\r\n                event.ext.device.model = device.model;\r\n            }\r\n            if (CoreUtils.isString(device.deviceClass)) {\r\n                event.ext.device.deviceClass = device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event, itemCtx) {\r\n        var internal = this.internal;\r\n        if (internal) {\r\n            if (CoreUtils.isString(internal.agentVersion)) {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (CoreUtils.isString(internal.sdkVersion)) {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = internal.sdkVersion;\r\n            }\r\n            if (event.baseType === _InternalLogMessage.dataType || event.baseType === PageView.dataType) {\r\n                if (CoreUtils.isString(internal.snippetVer)) {\r\n                    event.tags[CtxTagKeys.internalSnippet] = internal.snippetVer;\r\n                }\r\n                if (CoreUtils.isString(internal.sdkSrc)) {\r\n                    event.tags[CtxTagKeys.internalSdkSrc] = internal.sdkSrc;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event, itemCtx) {\r\n        var location = this.location;\r\n        if (location) {\r\n            if (CoreUtils.isString(location.ip)) {\r\n                event.tags[CtxTagKeys.locationIp] = location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event, itemCtx) {\r\n        var telemetryTrace = this.telemetryTrace;\r\n        if (telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (CoreUtils.isString(telemetryTrace.traceID)) {\r\n                trace.traceID = telemetryTrace.traceID;\r\n            }\r\n            if (CoreUtils.isString(telemetryTrace.name)) {\r\n                trace.name = telemetryTrace.name;\r\n            }\r\n            if (CoreUtils.isString(telemetryTrace.parentID)) {\r\n                trace.parentID = telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event, itemCtx) {\r\n        var web = this.web;\r\n        if (web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event, itemCtx) {\r\n        var user = this.user;\r\n        if (user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (CoreUtils.isString(user.accountId)) {\r\n                event.tags[CtxTagKeys.userAccountId] = user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (CoreUtils.isString(user.id)) {\r\n                event.ext.user.id = user.id;\r\n            }\r\n            if (CoreUtils.isString(user.authenticatedId)) {\r\n                event.ext.user.authId = user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event, itemCtx) {\r\n        if (event.ext[Extensions.DeviceExt] && CoreUtils.objKeys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && CoreUtils.objKeys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && CoreUtils.objKeys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && CoreUtils.objKeys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && CoreUtils.objKeys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && CoreUtils.objKeys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { BaseTelemetryPlugin, CoreUtils, _InternalLogMessage, LoggingSeverity, _InternalMessageId, getNavigator, objForEachKey } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        return _this;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; },\r\n            idLength: function () { return 22; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        var _this = this;\r\n        _super.prototype.initialize.call(this, config, core, extensions, pluginChain);\r\n        var ctx = this._getTelCtx();\r\n        var identifier = this.identifier;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        objForEachKey(defaultConfig, function (field, value) {\r\n            _this._extensionConfig[field] = function () { return ctx.getConfig(identifier, field, value()); };\r\n        });\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event, itemCtx) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            itemCtx = this._getTelCtx(itemCtx);\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                itemCtx.diagLog().resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event, itemCtx);\r\n            if (this.context && this.context.user && this.context.user.isNewUser) {\r\n                this.context.user.isNewUser = false;\r\n                var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, ((getNavigator() || {}).userAgent || \"\"));\r\n                itemCtx.diagLog().logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n            }\r\n            this.processNext(event, itemCtx);\r\n        }\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event, itemCtx) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        var ext = event.ext;\r\n        ext[Extensions.DeviceExt] = ext[Extensions.DeviceExt] || {};\r\n        ext[Extensions.WebExt] = ext[Extensions.WebExt] || {};\r\n        ext[Extensions.UserExt] = ext[Extensions.UserExt] || {};\r\n        ext[Extensions.OSExt] = ext[Extensions.OSExt] || {};\r\n        ext[Extensions.AppExt] = ext[Extensions.AppExt] || {};\r\n        ext[Extensions.TraceExt] = ext[Extensions.TraceExt] || {};\r\n        var context = this.context;\r\n        context.applySessionContext(event, itemCtx);\r\n        context.applyApplicationContext(event, itemCtx);\r\n        context.applyDeviceContext(event, itemCtx);\r\n        context.applyOperationContext(event, itemCtx);\r\n        context.applyUserContext(event, itemCtx);\r\n        context.applyOperatingSystemContxt(event, itemCtx);\r\n        context.applyWebContext(event, itemCtx);\r\n        context.applyLocationContext(event, itemCtx); // legacy tags\r\n        context.applyInternalContext(event, itemCtx); // legacy tags\r\n        context.cleanUp(event, itemCtx);\r\n    };\r\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport '@microsoft/applicationinsights-shims';\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { ConnectionStringParser } from './ConnectionStringParser';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strShimHasOwnProperty","getGlobal","globalThis","self","window","global","objCreateFn","obj","func","Object","type","TypeError","tmpFunc","__extendStaticsFn","d","b","__proto__","Array","p","extendsFn","__","this","constructor","root","globalObj","__assign","assign","t","s","i","n","arguments","length","call","__extends","EventsDiscardedReason","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","strUndefined","strObject","strPrototype","strWindow","strConsole","strJSON","shimsGetGlobal","getGlobalInst","name","gbl","hasWindow","getWindow","getDocument","document","getNavigator","navigator","getLocation","location","hasJSON","JSON","getJSON","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","UInt32Mask","MaxUInt32","_isTrident","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","Math","random","Date","getTime","_isTypeof","value","theType","_isUndefined","undefined","_isNullOrUndefined","_hasOwnProperty","prop","hasOwnProperty","_isObject","_isFunction","_attachEvent","eventNameWithoutOn","handlerRef","useCapture","result","e","_detachEvent","objForEachKey","target","callbackfn","CoreUtils","isDate","toString","isArray","isError","isString","isNumber","isBoolean","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","randomValue","toISOString","date","pad","num","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","arrForEach","arr","thisArg","len","idx","arrIndexOf","searchElement","fromIndex","lp","max","from","abs","arrMap","_this","results","arrReduce","initialValue","strTrim","str","objKeys","hasDontEnumBug","propertyIsEnumerable","push","dontEnums","dontEnumsLength","addEventHandler","eventName","callback","w","doc","EventHelper","Attach","dateNow","dt","now","perfNow","perf","newId","maxLength","number","random32","chars","base64chars","isIE","userAgent","toLowerCase","indexOf","maxValue","floor","signed","getRandomValues","Uint32Array","mwcRandom32","mwcRandomSeed","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","substr","isTypeof","isUndefined","isNullOrUndefined","isFunction","isObject","objCreate","objDefineAccessors","getProp","setProp","defineProp","descriptor","enumerable","configurable","get","set","LoggingSeverity","AttachEvent","Detach","DetachEvent","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","FailedMonitorAjaxSetRequestHeader","SendBrowserInfoOnUserInit","PluginException","NotificationException","SnippetScriptLoadFailure","InvalidInstrumentationKey","CannotParseAiBlobValue","InvalidContentBlob","TrackPageActionEventFailed","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","strUseBaseInst","strSetInstFuncs","_objGetPrototypeOf","_dynamicNames","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","Function","_getObjProto","newProto","_isDynamicCandidate","funcName","skipOwn","_throwTypeError","message","_hasVisited","values","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","classProto","thisProto","_checkPrototype","className","perfOptions","useBaseInst","thisTarget","instFuncs","_instFuncProxy","funcHost","instFuncTable","theFunc","apply","baseFuncs","baseProto","visited","_getBaseFuncs","_getInstanceFuncs","setInstanceFunc","proto","baseInstFuncs","dynProtoProxy","protoFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","_getInstFunc","_createDynamicPrototype","_populatePrototype","setInstFuncs","AIInternalMessagePrefix","_sanitizeDiagnosticText","text","_InternalLogMessage","dataType","msgId","msg","isUserAct","properties","messageId","strProps","stringify","diagnosticText","DiagnosticLogger","prototype","enableDebugExceptions","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","throwInternal","severity","warnToConsole","resetInternalMessageCount","logInternalMessage","config","identifier","queue","_messageCount","_messageLogged","_self","_getConfigValue","defValue","messageKey","WARNING","logFunc","theConsole","console","warn","logMessage","throttleLimitMessage","throttleMessage","strExecutionContextKey","PerfEvent","ParentContextKey","ChildrenContextKey","payloadDetails","isAsync","theDetails_1","accessorDefined","start","isChildEvt","getCtx","key","setCtx","complete","childTime","childEvts","childEvt","time","exTime","payload","PerfManager","create","src","fire","perfEvent","manager","ctx","doPerfActiveKey","doPerf","mgrSource","getSource","details","perfMgr","children","perfEvt","currentActive","ex","TelemetryPluginChain","plugin","defItemCtx","_nextProxy","_hasProcessTelemetry","processTelemetry","_hasSetNext","setNextPlugin","_hasRun","getPlugin","getNext","setNext","nextPlugin","env","itemCtx","core","error","hasRun","diagLog","CRITICAL","item","_createProxyChain","plugins","proxies","lastProxy","thePlugin","newProxy","ProcessTelemetryContext","startAt","add","proxy","_copyProxyChain","logger","getCfg","getExtCfg","defaultValue","theConfig","extConfig","extensionConfig","getConfig","field","theValue","hasNext","processNext","createNew","BaseTelemetryPlugin","initialize","extensions","pluginChain","_baseTelInit","_isinitialized","_rootCtx","_nextPlugin","_getTelCtx","isInitialized","setInitialized","next","currentCtx","rootCtx","getProcessTelContext","priority","initializePlugins","processContext","initPlugins","lastPlugin","sortPlugins","sort","extA","extB","bHasProcess","_super","ChannelControllerPriority","ChannelValidationMessage","_objDefineAccessors","ChannelController","getChannelControls","_staticInit","_channelQueue","_arrForEach","_addChannelQueue","queueItem","Error","_base","queues","channels","extensionQueue_1","isCookieUseDisabled","validationError","strNotificationManager","BaseCore","notificationManager","getTransmissionControls","track","telemetryItem","getNotifyMgr","getPerfMgr","setPerfMgr","eventCnt","releaseQueue","_eventQueue","_channelController","_notificationManager","_perfManager","_isInitialized","_extensions","instrumentationKey","NotificationManager","allExtensions","concat","coreExtensions","extPriorities","ext","extPriority","iKey","ver","thePlugins","addNotificationListener","listener","removeNotificationListener","eventsSent","events","eventsDiscarded","reason","eventsSendRequest","sendReason","enablePerfMgr","event","StorageType","FieldType","listeners","perfEvtsSendAll","index","splice","setTimeout","AppInsightsCore","_notifyInvalidEvent","_validateTelemetryItem","pollInternalLogs","interval","diagnosticLogInterval","setInterval","baseType","baseData","DistributedTracingModes","DataSanitizer","sanitizeKeyAndAddUniqueness","map","origLength","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","nameTrunc","trim","sanitizeString","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps_1","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements_1","measure","sanitizeId","id","MAX_ID_LENGTH","input","_msgId","inputTrunc","data","_navigator","_isString","_uaDisallowsSameSiteNone","Util","createDomEvent","Event","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","disallowsSameSiteNone","search","setCookie","domain","domainAttrib","secureAttrib","location_1","protocol","stringToBoolOrDefault","getCookie","cookieName","cookies","split","deleteCookie","getIEVersion","userAgentStr","myNav","parseInt","tridentVer","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","object","objectTypeDump","propertyValueDump","stack","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","toISOStringForIE8","UrlHelper","parseUrl","anchorIdx","_htmlAnchorIdx","anchorCache","_htmlAnchorElement","tempAnchor","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","inclPort","fullHost","parseFullHost","match","port","AjaxHelper","ParseDependencyPath","commandName","parsedUrl","pathName","Data","sampleRate","tags","aiDataContract","Required","Hidden","EventData","Domain","Default","envelopeType","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","strError","Exception","severityLevel","problemGroup","isManual","_ExceptionDetails","CreateFromInterface","toInterface","CreateSimpleException","typeName","assembly","fileName","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","evt","errorType","exec","_getErrorType","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","GeneratedRemoteDependencyData","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","AIData","SeverityLevel","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","Session","_SessionManager","update","automaticSession","initializeAutomaticSession","acquisitionExpired","sessionExpirationMs","acquisitionDate","renewalExpired","renewalDate","sessionRenewalMs","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","_logger","_storageNamePrefix","initializeAutomaticSessionWithData","sessionData","renewal","params","acq","idLength","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomain","UTCString","toUTCString","join","acquisitionSpan","renewalSpan","cookieNameConst","namePrefix","Application","Device","deviceClass","Internal","sdkVersion","sdkExtension","User","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","validateUserInput","authenticatedId","authCookie","cookieSeparator","authUserCookieName","encodeURI","clearAuthenticatedUserContext","userCookieName","isNewUser","newCookie","acqStr","accountAcquisitionDate","name_1","authCookieString","decodeURI","Location","TelemetryTrace","parentId","traceID","parentID","TelemetryContext","applySessionContext","session","sessionManager","sessionContext","app","sesId","applyOperatingSystemContxt","os","applyApplicationContext","application","build","applyDeviceContext","device","localId","ip","model","applyInternalContext","internal","agentVersion","snippetVer","sdkSrc","applyLocationContext","applyOperationContext","trace","telemetryTrace","applyWebContext","web","applyUserContext","user","authId","cleanUp","defaultConfig","appId","PropertiesPlugin","getDefaultConfig","samplingPercentage","isBrowserLinkTrackingEnabled","_extensionConfig","context","_breezeChannel","_processTelemetryInternal"],"mappings":"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"}