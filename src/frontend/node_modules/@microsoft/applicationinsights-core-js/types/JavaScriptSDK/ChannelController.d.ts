import { IAppInsightsCore } from "../JavaScriptSDK.Interfaces/IAppInsightsCore";
import { IConfiguration } from "../JavaScriptSDK.Interfaces/IConfiguration";
import { IChannelControls } from "../JavaScriptSDK.Interfaces/IChannelControls";
import { IPlugin, ITelemetryPlugin } from "../JavaScriptSDK.Interfaces/ITelemetryPlugin";
import { ITelemetryPluginChain } from "../JavaScriptSDK.Interfaces/ITelemetryPluginChain";
import { ITelemetryItem } from "../JavaScriptSDK.Interfaces/ITelemetryItem";
import { IProcessTelemetryContext } from "../JavaScriptSDK.Interfaces/IProcessTelemetryContext";
import { BaseTelemetryPlugin } from './BaseTelemetryPlugin';
export declare class ChannelController extends BaseTelemetryPlugin {
    identifier: string;
    priority: number;
    setNextPlugin: (next: ITelemetryPlugin | ITelemetryPluginChain) => void;
    constructor();
    processTelemetry(item: ITelemetryItem, itemCtx: IProcessTelemetryContext): void;
    getChannelControls(): IChannelControls[][];
    initialize(config: IConfiguration, core: IAppInsightsCore, extensions: IPlugin[]): void;
    /**
     * Static constructor, attempt to create accessors
     */
    private static _staticInit;
}
