{"version":3,"file":"IPerfEvent.js","sourceRoot":"","sources":["../../src/JavaScriptSDK.Interfaces/IPerfEvent.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ITelemetryItem } from \"../JavaScriptSDK.Interfaces/ITelemetryItem\";\r\n\r\n/**\r\n * This interface identifies the details of an internal performance event - it does not represent an outgoing reported event\r\n */\r\nexport interface IPerfEvent {\r\n    /**\r\n     * The name of the performance event\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * The start time of the performance event\r\n     */\r\n    start: number;\r\n\r\n    /**\r\n     * The payload (contents) of the perfEvent, may be null or only set after the event has completed depending on\r\n     * the runtime environment.\r\n     */\r\n    payload: any;\r\n\r\n    /**\r\n     * Is this occurring from an asynchronous event\r\n     */\r\n    isAsync: boolean;\r\n    \r\n    /**\r\n     * Identifies the total inclusive time spent for this event, including the time spent for child events, \r\n     * this will be undefined until the event is completed\r\n     */\r\n    time?: number;\r\n\r\n    /**\r\n     * Identifies the exclusive time spent in for this event (not including child events),\r\n     * this will be undefined until the event is completed.\r\n     */\r\n    exTime?: number;\r\n    /**\r\n     * The Parent event that was started before this event was created\r\n     */\r\n    parent?: IPerfEvent;\r\n\r\n    /**\r\n     * The child perf events that are contained within the total time of this event.\r\n     */\r\n    childEvts?: IPerfEvent[];\r\n\r\n    /**\r\n     * Identifies whether this event is a child event of a parent\r\n     */\r\n    isChildEvt: () => boolean;\r\n\r\n    /**\r\n     * Get the names additional context associated with this perf event\r\n     */\r\n    getCtx?: (key: string) => any;\r\n\r\n    /**\r\n     * Set the named additional context to be associated with this perf event, this will replace any existing value\r\n     */\r\n    setCtx?: (key: string, value: any) => void;\r\n\r\n    /**\r\n     * Mark this event as completed, calculating the total execution time.\r\n     */\r\n    complete: () => void;\r\n}"]}