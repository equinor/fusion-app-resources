{"version":3,"file":"IPerfManager.js","sourceRoot":"","sources":["../../src/JavaScriptSDK.Interfaces/IPerfManager.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ITelemetryItem } from \"../JavaScriptSDK.Interfaces/ITelemetryItem\";\r\nimport { IPerfEvent } from './../JavaScriptSDK.Interfaces/IPerfEvent';\r\n\r\n/**\r\n * Identifies an interface to a host that can provide an IPerfManager implementation\r\n */\r\nexport interface IPerfManagerProvider {\r\n    /**\r\n     * Get the current performance manager\r\n     */\r\n    getPerfMgr(): IPerfManager;\r\n\r\n    /**\r\n     * Set the current performance manager\r\n     * @param perfMgr The performance manager\r\n     */\r\n    setPerfMgr(perfMgr: IPerfManager): void;\r\n}\r\n\r\n/**\r\n * This defines an internal performance manager for tracking and reporting the internal performance of the SDK -- It does\r\n * not represent or report any event to the server.\r\n */\r\nexport interface IPerfManager {\r\n    /**\r\n     * Create a new event and start timing, the manager may return null/undefined to indicate that it does not \r\n     * want to monitor this source event.\r\n     * @param src The source name of the event \r\n     * @param payloadDetails - An optional callback function to fetch the payload details for the event.\r\n     * @param isAsync - Is the event occurring from a async event\r\n     */\r\n    create(src: string, payloadDetails?: () => any, isAsync?: boolean): IPerfEvent | null | undefined;\r\n\r\n    /**\r\n     * Complete the perfEvent and fire any notifications.\r\n     * @param perfEvent Fire the event which will also complete the passed event\r\n     */\r\n    fire(perfEvent: IPerfEvent): void;\r\n\r\n    /**\r\n     * Set an execution context value\r\n     * @param key - The context key name\r\n     * @param value - The value\r\n     */\r\n    setCtx(key: string, value: any): void;\r\n\r\n    /**\r\n     * Get the execution context value\r\n     * @param key - The context key\r\n     */\r\n    getCtx(key: string): any;\r\n}\r\n"]}