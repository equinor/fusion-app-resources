trigger: 
  branches:
    include:
    - master
  paths:
    include:
    - frontend/*
    exclude:
    - README.md
    - k8s/*
    - .*
    - azure-pipeline.yml
    - Dockerfile

pr: none

# resources:
#   repositories:
#     - repository: commonTemplates
#       type: git
#       name: 'ProView Portal/fusion-pipeline-templates'

variables:
  imageTag: $(Build.BuildNumber)
  fusionAcr: 'fusioncr.azurecr.io'
  imageName: apps/fusion-resouces-app:$(imageTag)
  subscriptionService: 'PROJECT_PORTAL (63b791ae-b2bc-41a1-ac66-806c4e69bffe)'
  deploymentManifest: '$(Pipeline.Workspace)/k8s-deployment/deployment.template.yml'

stages:
- stage: BuildDockerImage
  displayName: 'Build docker image'
  jobs:
  - job: BuildImage
    pool: Private Docker
    steps:
    - task: Docker@1
      displayName: 'Build an image'
      inputs:
        azureSubscriptionEndpoint: $(subscriptionService)
        azureContainerRegistry: '$(fusionAcr)'
        dockerFile: 'src/frontend/dev.Dockerfile'
        imageName: '$(imageName)'
        includeSourceTags: true
        includeLatestTag: false
        useDefaultContext: false
        buildContext: ./src/frontend

    - task: Docker@1
      displayName: 'Push an image'
      inputs:
        azureSubscriptionEndpoint: $(subscriptionService)
        azureContainerRegistry: '$(fusionAcr)'
        command: 'Push an image'
        imageName: '$(imageName)'

    - template: ../../pipelines/templates/replace-tokens.yml
      parameters:
        targetFiles: 'src/frontend/k8s/deployment.template.yml'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: 'src/frontend/k8s'
        Contents: |
            deployment.template.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'        

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: 'k8s-deployment'

- stage: DeployCI
  displayName: 'Deploy to CI'
  dependsOn: BuildDockerImage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables: 
    envName: 'ci'
    clientId: '5a842df8-3238-415d-b168-9f16a6a6031b'

  jobs:
  - deployment: DeployCI
    pool: Private Docker
    environment: fusion-ci.fusion-resources-app-ci
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../../pipelines/templates/replace-tokens.yml
            parameters:
              targetFiles: '$(deploymentManifest)'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: $(deploymentManifest)    